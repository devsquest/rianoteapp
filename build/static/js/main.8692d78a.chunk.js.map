{"version":3,"sources":["components/notFound.jsx","services/httpService.jsx","services/authService.jsx","components/common/input.jsx","components/common/select.jsx","components/common/checkbox.jsx","components/common/form.jsx","components/users/loginForm.jsx","services/noteService.jsx","components/type.jsx","components/home.jsx","Routes.js","MainLayout.jsx","components/common/topnav.jsx","components/common/sidenav.jsx","components/common/modal.jsx","components/dashboard.jsx","components/subscriptions.jsx","components/orders.jsx","components/notifications.jsx","components/requests.jsx","components/profile.jsx","components/getstarted.jsx","components/common/ProtectedRoute.jsx","components/layouts/DashboardLayout.jsx","components/common/NoteTopnav.jsx","components/common/LeftItem.jsx","services/optionService.jsx","components/common/Options.jsx","components/common/QuestionOptions.jsx","components/notes/QuestionWithMultiOptions.jsx","components/notes/QuestionWithOptions.jsx","components/headings/ChildHeadings.jsx","services/headingService.jsx","components/headings/Heading.jsx","components/common/SubItem.jsx","components/notes/NoteTop.jsx","components/notes/NoteArea.jsx","components/common/NoteRightSide.jsx","components/common/NoteSidenav.jsx","components/notes/NoteContent.jsx","services/questionService.jsx","components/common/preferenceModal.jsx","components/common/FinalEditModal.jsx","components/helpContent.jsx","components/preferenceContent.jsx","components/finalEditContent.jsx","components/Note.jsx","components/layouts/NoteLayout.jsx","components/common/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["NotFound","axios","interceptors","response","use","error","status","console","log","toast","Promise","reject","get","post","put","delete","setToken","token","defaults","headers","common","Authorization","apiEndpoint","apiUrl","login","email","password","http","getToken","localStorage","getItem","getUser","apiUser","saveBasicUserData","userData","userInfo","logout","removeItem","Input","name","label","rest","className","htmlFor","id","Select","options","value","map","option","key","_id","Form","state","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","classes","disabled","this","onChange","type","Component","LoginForm","username","string","required","a","authData","setItem","success","window","location","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onSubmit","renderInput","renderCheckbox","renderButton","to","getNotes","getSectionsByType","Home","noteType","notes","user","handleType","handleSelection","goNote","url","data-toggle","data-target","Fragment","tabIndex","aria-labelledby","aria-hidden","data-dismiss","note","onClick","AppRoute","component","Layout","layout","render","props","MainLayout","children","TopNav","person","href","src","alt","width","role","SideNav","Modal","modalid","content","title","Dashboard","readOnly","rows","style","resize","display","target","data-placement","data-original-title","aria-controls","placeholder","data-tablesaw-sortable","scope","data-tablesaw-sortable-col","data-tablesaw-sortable-default-col","data-tablesaw-priority","aria-live","Subscriptions","Orders","Notifications","Requests","Profile","npassword","cpassword","defaultValue","GetStarted","class","ProtectedRoute","auth","DashboardLayout","Getstart","exact","Subscription","maxwidget","NoteTopNav","LeftItems","section","sid","selectedType","index","devId","selectedSubType","getSectionQuestions","getClasses","aria-expanded","selected","saveOptionWithId","option_text","Options","useState","editMode","setEditMode","optionText","setOptionText","saveOption","then","selectOpt","typ","ques","optText","setContnt","optId","isSelectedOption","handleSelectedOption","selectOption","question","setContent","QuestionOPtions","question_type","question_text","ind","QuestionWithMultiOptions","isInEditMode","optionId","quesWithMultiOption","handleQuesWithMultiOption","onDoubleClick","QuestionWithOptions","quesWithOption","handleQuesWithOption","questionText","finalContent","reactStringReplace","match","i","ChildHeadings","setHeadingWithContent","isAdded","handleTemporaryHeading","saveTempHeadings","number","deleteChild","childNum","getHeadingsByType","saveHeading","heading_text","heading_content","note_id","head_id","deleteHeadingById","Heading","isWriting","headingsText","headingsContent","headingIds","numChildren","headingId","indexOf","removeItemOnce","forEach","push","addChild","disableEditModeAndSave","handleHeading","headingText","headingContent","setHeadingIdsArr","setHeadingTextArr","setHeadingContentArr","deleteHeading","addTempHeading","hid","arr","splice","headings","aria-describedby","heading","autoComplete","SubItems","date","start_time","end_time","fee","start_comments","end_comments","handleOption","qid","selection_type","c","alreadyExist","opt","replace","SwitchCase","questions","getCollapse","getSubClasses","TextField","variant","backgroundColor","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","edge","SearchSharp","section_id","subclass","subSelected","NoteRightSide","iComment","handlePdf","document","getElementById","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","orientation","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","addImage","save","handleConfirmation","confirmAlert","buttons","handleClear","handleCopy","reload","headingIdsArr","headingTextArr","headingContentArr","pname","pdate","startTime","endTime","element","sessionFee","introComment","closingComment","NoteSideNav","setSeleted","handleSubType","childSelected","setSubSeleted","sections","loadQuestionsWithOptions","setHeadingContent","LeftItem","overflow","SubItem","NoteContent","iFlag","cFlag","handleMainComment","comment","setIntroComment","handleMainClosingComment","setClosingComment","cComment","handleComment","handleClosingComment","setName","setDate","setStartTime","setEndTime","setSessionFee","startAdornment","size","InputLabelProps","shrink","inputProps","step","currencySymbol","minimumValue","outputFormat","decimalCharacter","digitGroupSeparator","IsoTwoTone","getQuestionsWithOptions","Preference","FinalEdit","fcontent","HelpContent","PreferenceContent","FinalEditContent","contentEditable","Note","qiestionWithOptions","headingsIdArr","headingsTextArr","headingsContentArr","handleContent","handleSectionQuestions","qts","handleHeadingIds","handleHeadingText","handleHeadingContent","handleName","handleDate","handleStartTime","handleEndTime","handleSessionFee","handleIntroComment","handleHeadingWithContent","handleSelected","handleSubSelection","childSelection","params","NoteLayout","Logout","useEffect","App","from","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8692d78a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport auth from \"./authService\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setToken(token) {\n  axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setToken,\n};\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/login\";\nconst tokenKey = \"token\";\nhttp.setToken(getToken());\n\nexport function login(email, password) {\n  return http.post(apiEndpoint, { email, password });\n}\nexport function logout() {\n  return localStorage.removeItem(tokenKey);\n}\nexport function getToken() {\n  return localStorage.getItem(tokenKey);\n}\nexport function getUser() {\n  const apiUser = apiUrl + \"/details\";\n  return http.get(apiUser);\n}\nexport function saveBasicUserData(userData) {\n  //const body = { ...userData };\n  const userInfo = apiUrl + \"/user-info\";\n  return http.post(userInfo, userData);\n}\n\nexport default {\n  login,\n  logout,\n  getUser,\n  getToken,\n  saveBasicUserData,\n};\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control loginInput\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map((option) => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"custom-control custom-checkbox mb-3\">\n      <input {...rest} name={name} id={name} className=\"custom-control-input\" />\n      {error && (\n        <div className=\"alert alert-danger\">\n          {error}\n          <label className=\"custom-control-label\" htmlFor={name}>\n            {label}\n          </label>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\nimport Checkbox from \"./checkbox\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label, classes = \"btn btn-primary\") {\n    return (\n      <button disabled={this.validate()} className={classes}>\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n  renderCheckbox(name, label, type = \"text\") {\n    const { data } = this.state;\n\n    return (\n      <Checkbox\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport { login } from \"../../services/authService\";\nimport Form from \"../common/form\";\nimport { Link } from \"react-router-dom\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      const { data: authData } = await login(data.username, data.password);\n      localStorage.setItem(\"token\", authData.success.token);\n      window.location = \"/home\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 401) {\n        //const errors = { ...this.state.errors };\n        //errors.username = ex.response.data.error;\n        //this.setState({ errors });\n        toast.error(\"Please provide valid credentials!\", {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div className=\"card card-signin my-5\">\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"card-body\">\n                  <h1 className=\"card-title text-center login-heading\">\n                    Ria Notes Designer\n                  </h1>\n                  <div className=\"sub-heading\">\n                    Write better notes and faster.\n                  </div>\n                  <div className=\"form-label-group\">\n                    {this.renderInput(\"username\", \"Username\")}\n                  </div>\n                  <div className=\"form-label-group\">\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\n                  </div>\n\n                  {this.renderCheckbox(\n                    \"rememberme\",\n                    \"Remember password\",\n                    \"checkbox\"\n                  )}\n\n                  {this.renderButton(\n                    \"Login\",\n                    \"btn btn-lg btn-primary btn-block text-uppercase\"\n                  )}\n                  <Link to=\"/\">Forgot Password</Link>\n                  <hr className=\"my-4\" />\n                  {this.renderButton(\n                    \"Purchase a copy of RIA NOTE DESIGNER\",\n                    \"btn btn-lg btn-warning btn-block\"\n                  )}\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/notes\";\n\nexport function getNotes() {\n  return http.get(apiEndpoint);\n}\nexport function getSectionsByType(id) {\n  return http.get(apiEndpoint + \"/\" + id);\n}\n","import React, { Component } from \"react\";\nclass Type extends Component {\n  render() {\n    const { note, selectedType, switchNote } = this.props;\n    return (\n      <li className={this.getClasses()} onClick={() => selectedType(note)}>\n        {note.name}\n      </li>\n    );\n  }\n  getClasses() {\n    const { note, noteType } = this.props;\n    let classes = \"list-group-item list-group-item-action \";\n    classes += noteType && note.id === noteType.id ? \"active\" : \"\";\n    return classes;\n  }\n}\n\nexport default Type;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { getNotes } from \"../services/noteService\";\nimport { getUser } from \"../services/authService\";\nimport { Link } from \"react-router-dom\";\nimport Type from \"./type\";\n\nclass Home extends Component {\n  state = {\n    noteType: {},\n    classes: {},\n    notes: [],\n    user: [],\n    errors: {},\n  };\n  async componentDidMount() {\n    try {\n      const { data: notes } = await getNotes();\n      const { data: user } = await getUser();\n      this.setState({ notes: notes[\"success\"] });\n      this.setState({ user });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 500) {\n        toast.error(\"Please login to access application!\", {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  }\n\n  handleType = (type) => {\n    this.setState({ noteType:type });\n  };\n\n  handleSelection = () => {\n    let { noteType } = this.state;\n    noteType = {};\n    this.setState({ noteType });\n    console.log(noteType);\n  };\n\n  goNote = () => {\n    const { noteType } = this.state;\n    const url = noteType ? \"/\" + noteType : \"\";\n    window.location = \"/note\" + url;\n  };\n  render() {\n    const { notes, noteType } = this.state;\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-9 col-md-7 col-lg-4 mx-auto\">\n          <div className=\"card card-signin my-5\">\n            <div className=\"card-body\">\n              <h1 className=\"card-title text-center login-heading\">\n                Ria Notes Designer\n              </h1>\n              <div className=\"sub-heading\">Write better notes and faster.</div>\n              <hr className=\"my-4\" />\n              <br />\n              {this.state.user != \"\" && (\n                <form className=\"form-signin\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-lg btn-success btn-block text-uppercase\"\n                    data-toggle=\"modal\"\n                    data-target=\"#responsive-modal\"\n                  >\n                    Start a New Note\n                  </button>\n                  <Link\n                    to=\"/dashboard\"\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\n                    type=\"submit\"\n                  >\n                    Got to Dashboard\n                  </Link>\n                  <br />\n                  <br />\n                </form>\n              )}\n              {this.state.user == \"\" && (\n                <React.Fragment>\n                  <Link\n                    to=\"/login\"\n                    className=\"btn btn-lg btn-success btn-block text-uppercase\"\n                    type=\"submit\"\n                  >\n                    Login\n                  </Link>\n                  <Link\n                    to=\"/login\"\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\n                    type=\"submit\"\n                  >\n                    Register\n                  </Link>\n                  <br />\n                  <br />\n                </React.Fragment>\n              )}\n\n              <div\n                  className=\"modal fade\"\n                  id=\"responsive-modal\"\n                  tabIndex=\"-1\"\n                  aria-labelledby=\"myModalLabel\"\n                  aria-hidden=\"true\"\n              >\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                      <h4 className=\"modal-title\">Start a new note</h4>\n                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                    </div>\n                    <div className=\"modal-body\">\n                      <p>Choose Note Type:</p>\n                      <form>\n                        {notes.map((note) => (\n                            <div className=\"checkbox checkbox-info checkbox-circle\" key={note.id}>\n                              <input id={note.id} type=\"checkbox\" name=\"notes\"\n                                     onClick={() => this.handleType(note.id)}/>\n                              <label htmlFor={note.id}>{note.name}</label>\n                            </div>\n                        ))}\n                      </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <button type=\"button\"\n                              className=\"btn btn-primary\"\n                              onClick={this.goNote}>\n                        Start a new note\n                      </button>\n                      <button type=\"button\"\n                              className=\"btn btn-secondary ml-1\"\n                              data-dismiss=\"modal\"\n                              onClick={this.handleSelection}\n                      >Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst AppRoute = ({ component: Component, layout: Layout, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nexport default AppRoute;\n","import React from \"react\";\n\nconst MainLayout = ({ children }) => {\n  return (\n    <>\n      <main className=\"container\">{children}</main>\n    </>\n  );\n};\n\nexport default MainLayout;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst TopNav = (user) => {\n    let person = user && user[\"user\"] ? user[\"user\"][0] : [];\n  return (\n      <nav className=\"navbar navbar-default navbar-static-top m-b-0 dash-top\">\n          <div className=\"navbar-header\">\n              <div className=\"top-left-part\">\n                  <Link className=\"logo navbar-brand\" to=\"/dashboard\">\n                      <b>\n                          <i className=\"fa fa-home\"/>\n                          &nbsp; Ria Note\n                      </b>\n                  </Link>\n              </div>\n\n              <ul className=\"nav navbar-top-links navbar-right pull-right\">\n                  <li className=\"dropdown\">\n                      <a className=\"dropdown-toggle profile-pic\" data-toggle=\"dropdown\" href=\"#\">\n                          <img src=\"../plugins/images/users/varun.jpg\" alt=\"user-img\" width=\"36\" className=\"img-circle\"/>\n                          { (person && person.name)\n                              ? <b className=\"hidden-xs\">{ person.name }</b>\n                              : <h4>\"Anonymous\"</h4>\n                          }\n                      </a>\n                      <ul className=\"dropdown-menu dropdown-user animated flipInY\">\n                          <li>\n                              <div className=\"dw-user-box\">\n                                  <div className=\"u-img\">\n                                      <img src=\"../plugins/images/users/varun.jpg\" alt=\"user\"/>\n                                  </div>\n                                  <div className=\"u-text\">\n                                      { (person && person.name)\n                                          ? <h4> {person.name} </h4> : <h4>\"Anonymous\"</h4>\n                                      }\n                                      { (person && person.name)\n                                          ? <p className=\"text-muted\">{ person.email }</p> : <h4>\"Anonymous\"</h4>\n                                      }\n                                      <a href=\"profile.html\" className=\"btn btn-rounded btn-danger btn-sm\">View\n                                          Profile</a>\n                                  </div>\n                              </div>\n                          </li>\n                          <li role=\"separator\" className=\"divider\"/>\n                          <li>\n                              <Link to=\"/logout\">\n                                  <i className=\"fa fa-power-off mr-2\"/>\n                                  Logout\n                              </Link>\n                          </li>\n                      </ul>\n                  </li>\n              </ul>\n          </div>\n      </nav>\n  );\n};\n\nexport default TopNav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SideNav = (props) => {\n  return (\n      <div className=\"navbar-default sidebar\" role=\"navigation\">\n        <div className=\"sidebar-nav slimscrollsidebar\">\n          <div className=\"sidebar-head\">\n            <h3>\n              <span className=\"fa-fw open-close\">\n              <i className=\"ti-menu hidden-xs\"/>\n              <i className=\"ti-close visible-xs\"/>\n              </span>\n              <span className=\"hide-menu\">\n                Ria Note\n              </span>\n            </h3>\n          </div>\n          <ul className=\"nav\" id=\"side-menu\">\n            <li>\n              <Link className=\"nav-link active\" to=\"/dashboard\">\n                <i className=\"ti-user\"/>\n                <span className=\"hide-menu\">\n                  &nbsp;Dashboard\n                </span>\n                <span className=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n            <li>\n              <a\n                  className=\"nav-link waves-effect\"\n                  //to=\"/getting-start\"\n                  data-toggle=\"modal\"\n                  data-target=\"#Getstart\"\n                  href=\"#\"\n              >\n                <i className=\"fa fa-info-circle\"/>\n                <span className=\"hide-menu\">\n                  &nbsp;Getting Started\n                </span>\n              </a>\n            </li>\n            <li>\n              <Link className=\"nav-link waves-effect\" to=\"/profile\">\n                <i className=\"fa fa-user\"/>\n                <span className=\"hide-menu\">\n                  &nbsp;My Profile\n                </span>\n              </Link>\n            </li>\n            <li>\n              <Link className=\"nav-link waves-effect\" to=\"/myRequests\">\n                <i className=\"icon-list\"/>\n                <span className=\"hide-menu\">\n                  &nbsp;My Requests\n                </span>\n              </Link>\n            </li>\n            <li>\n              <Link className=\"nav-link waves-effect\" to=\"/orders\">\n                <i className=\"fa fa-shopping-cart\"/>\n                <span className=\"hide-menu\">\n                  &nbsp;My Orders\n                </span>\n              </Link>\n            </li>\n            <li>\n              <Link className=\"nav-link waves-effect\" to=\"/subscriptions\">\n                <i className=\"fa fa-tags\"/>\n                <span className=\"hide-menu\">\n                  &nbsp;My Subscriptions\n                </span>\n              </Link>\n            </li>\n            <li>\n              <Link className=\"nav-link waves-effect\" to=\"/notifications\">\n                <i className=\"fa fa-bell-o\"/>\n                <span className=\"hide-menu\">\n                  &nbsp;My Notifications\n                </span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n  );\n};\n\nexport default SideNav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Modal = ({ modalid, title, content }) => {\n  return (\n      <div className=\"modal fade bs-example-modal-lg\" id={modalid} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\" id=\"myLargeModalLabel\">Help with Note Designer</h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n            </div>\n            <div className=\"modal-body\" id=\"slimtest2\">\n              {content}\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-danger waves-effect text-left\" data-dismiss=\"modal\"><i className=\"fa fa-times\"></i>&nbsp;Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    //   className=\"modal fade bd-example-modal-lg\"\n    //   id={modalid}\n    //   tabindex=\"-1\"\n    //   aria-labelledby=\"exampleModalLabel\"\n    //   aria-hidden=\"true\"\n    // >\n    //   <div className=\"modal-dialog\">\n    //     <div className=\"modal-content\">\n    //       <div className=\"modal-header\">\n    //         <h2 className=\"modal-title\" id=\"exampleModalLabel\">\n    //           {title}\n    //         </h2>\n    //         <button\n    //           type=\"button\"\n    //           className=\"close\"\n    //           data-dismiss=\"modal\"\n    //           aria-label=\"Close\"\n    //         >\n    //           <span aria-hidden=\"true\">&times;</span>\n    //         </button>\n    //       </div>\n    //       <div className=\"modal-body\">{content}</div>\n    //       <div className=\"modal-footer\">\n    //         <button\n    //           type=\"button\"\n    //           className=\"btn btn-secondary\"\n    //           data-dismiss=\"modal\"\n    //         >\n    //           Close\n    //         </button>\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport BasicInfo from \"./users/BasicInfo\";\n\nconst Dashboard = (props) => {\n  const {user} = props;\n  return (\n      <div id=\"page-wrapper\" className=\"dashboard-wrapper\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"white-box\">\n                <h3 className=\"box-title\">Welcome to your Note Designer User Dashboard</h3>\n                <button className=\"btn btn-success btn-sm\" id=\"btnNewNote\" data-toggle=\"modal\" data-target=\"#responsive-modal\">\n                  Start using your Ria Note now&nbsp;\n                  <i className=\"fa fa-arrow-circle-right\"/>\n                </button>\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h5>Basic information</h5>\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"form-group row m-b-5\">\n                      <label className=\"col-sm-4 col-form-label\">Email:</label>\n                      <div className=\"col-sm-8\">\n                        <input type=\"text\" readOnly=\"\" className=\"form-control-plaintext\" value=\"sawraw87@gmail.com\"/>\n                      </div>\n                    </div>\n                    <div className=\"form-group row m-b-5\">\n                      <label className=\"col-sm-4 col-form-label\">Signature:</label>\n                      <div className=\"col-sm-8\">\n                        <textarea readOnly=\"\" className=\"form-control-plaintext\" rows=\"2\" style={{resize:'none'}}>\n                          Sara ChaudhriLCSW\n                        </textarea>\n                        <button className=\"btn btn-primary btn-sm\" data-toggle=\"modal\"\n                                data-target=\"#requestChangeSignatureModal\">\n                          Request to change signature\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"form-group row m-b-5\">\n                      <label className=\"col-sm-4 col-form-label\">Billing information:</label>\n                      <div className=\"col-sm-8\">\n                        <button className=\"btn btn-primary btn-sm\" id=\"btnTempFSDashboardLink\">\n                          Get temporary link to FastSpring Dashboard\n                        </button>\n                        <a className=\"btn btn-success btn-sm\" href=\"#\" style={{display:'none'}} id=\"tempFSDashboardLink\"\n                           target=\"_blank\">\n                          Go to Fastspring\n                          <i className=\"fas fa-arrow-alt-circle-right\"/>\n                        </a>\n                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\" data-toggle=\"tooltip\" data-placement=\"right\"\n                           title=\"\"\n                           data-original-title=\"Fastspring, our secure retail partner, manages the billing for your account.\"/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h5>Active Subscriptions assigned to your account</h5>\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                      <div id=\"tableActiveSubscriptions_wrapper\" className=\"dataTables_wrapper dt-bootstrap4 no-footer\">\n                        <div className=\"row\">\n                          <div className=\"col-sm-12 col-md-6\">\n                            <div className=\"dataTables_length\" id=\"tableActiveSubscriptions_length\">\n                              <label>Show\n                                <select name=\"tableActiveSubscriptions_length\" aria-controls=\"tableActiveSubscriptions\"\n                                        className=\"custom-select custom-select-sm form-control form-control-sm\">\n                                  <option value=\"10\">10</option>\n                                  <option value=\"25\">25</option>\n                                  <option value=\"50\">50</option>\n                                  <option value=\"100\">100</option>\n                                </select> entries\n                              </label>\n                            </div>\n                          </div>\n                          <div className=\"col-sm-12 col-md-6 text-right p-r-20\">\n                            <div id=\"tableActiveSubscriptions_filter\" className=\"dataTables_filter\">\n                              <label>Search:\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"\"\n                                       aria-controls=\"tableActiveSubscriptions\"/>\n                              </label>\n                            </div>\n                          </div>\n                        </div>\n                        <table className=\"tablesaw table-bordered table-hover table\" data-tablesaw-sortable>\n                          <thead>\n                          <tr>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"persist\">Subscription\n                              <type></type></th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"3\">Is active?\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"2\">State\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"1\">Started from\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"4\">Valid until\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"5\">Purchased by\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"6\">Action\n                            </th>\n                          </tr>\n                          </thead>\n                          <tbody>\n                          <tr>\n                            <td className=\"title\"><a href=\"javascript:void(0)\">Monthly Individual</a></td>\n                            <td><span className=\"label label-success\">Active</span></td>\n                            <td><span className=\"label label-success\">Active</span></td>\n                            <td>2020-06-09</td>\n                            <td>2021-02-09</td>\n                            <td><span className=\"label label-info\">You</span></td>\n                            <td><span className=\"label label-danger\">X Unassign me</span></td>\n                          </tr>\n                          <tr>\n                            <td className=\"title\"><a href=\"javascript:void(0)\">Monthly Individual</a></td>\n                            <td><span className=\"label label-warning\">In Active</span></td>\n                            <td><span className=\"label label-warning\">In Active</span></td>\n                            <td>2020-06-10</td>\n                            <td>2021-02-11</td>\n                            <td><span className=\"label label-info\">You</span></td>\n                            <td><span className=\"label label-danger\">X Unassign me</span></td>\n                          </tr>\n                          <tr>\n                            <td className=\"title\"><a href=\"javascript:void(0)\">Monthly Individual</a></td>\n                            <td><span className=\"label label-success\">Active</span></td>\n                            <td><span className=\"label label-success\">Active</span></td>\n                            <td>2020-06-12</td>\n                            <td>2021-02-12</td>\n                            <td><span className=\"label label-info\">You</span></td>\n                            <td><span className=\"label label-danger\">X Unassign me</span></td>\n                          </tr>\n                          </tbody>\n                        </table>\n                        <div className=\"row\">\n                          <div className=\"col-sm-6 m-t-20\">\n                            <div className=\"dataTables_info\" id=\"editable-datatable_info\" role=\"status\"\n                                 aria-live=\"polite\">Showing 1 to 10 of 57 entries\n                            </div>\n                          </div>\n                          <div className=\"col-sm-6 text-right\">\n                            <div className=\"dataTables_paginate paging_simple_numbers\" id=\"editable-datatable_paginate\">\n                              <ul className=\"pagination\">\n                                <li className=\"paginate_button previous disabled\" aria-controls=\"editable-datatable\"\n                                    tabIndex=\"0\" id=\"editable-datatable_previous\"><a href=\"#\">Previous</a></li>\n                                <li className=\"paginate_button active\" aria-controls=\"editable-datatable\" tabIndex=\"0\">\n                                  <a href=\"#\">1</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">2</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">3</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">4</a></li>\n                                <li className=\"paginate_button next\" aria-controls=\"editable-datatable\" tabIndex=\"0\"\n                                    id=\"editable-datatable_next\"><a href=\"#\">Next</a></li>\n                              </ul>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <footer className=\"footer text-center\"> 2021 &copy; Ria Note</footer>\n      </div>\n  );\n};\n\n// <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n//   <div\n//       className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n//     <h1 className=\"h2\">Welcome to your Ria Note Designer User Dashboard</h1>\n//     <button\n//         type=\"button\"\n//         className=\"btn btn-success text-uppercase\"\n//         data-toggle=\"modal\"\n//         data-target=\"#responsive-modal\"\n//     >\n//       Start a New Note\n//     </button>\n//   </div>\n//\n//   <BasicInfo user={user}/>\n//\n//   <hr/>\n//   <div className=\"row my-5\">\n//     <h2 className=\"mb-3\">Active Subscriptions assigned to your account</h2>\n//     <table id=\"paginationFullNumbers\" className=\"table\" width=\"100%\">\n//       <thead>\n//       <tr>\n//         <th className=\"th-sm\">Subscription Type</th>\n//         <th className=\"th-sm\">Is Active</th>\n//         <th className=\"th-sm\">State</th>\n//         <th className=\"th-sm\">Started From</th>\n//         <th className=\"th-sm\">Valid Until</th>\n//         <th className=\"th-sm\">Purchased by</th>\n//         <th className=\"th-sm\">Action</th>\n//       </tr>\n//       </thead>\n//       <tbody>\n//       <tr>\n//         <td>Monthly Individual</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>2020-06-09</td>\n//         <td>2020-06-09</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-primary\">You</span>\n//         </td>\n//         <td>\n//           <button type=\"button\" className=\"btn btn-danger\">\n//             Unassigned Me\n//           </button>\n//         </td>\n//       </tr>\n//       <tr>\n//         <td>Monthly Individual</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>2020-06-09</td>\n//         <td>2020-06-09</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-primary\">You</span>\n//         </td>\n//         <td>\n//           <button type=\"button\" className=\"btn btn-danger\">\n//             Unassigned Me\n//           </button>\n//         </td>\n//       </tr>\n//       <tr>\n//         <td>Monthly Individual</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>2020-06-09</td>\n//         <td>2020-06-09</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-primary\">You</span>\n//         </td>\n//         <td>\n//           <button type=\"button\" className=\"btn btn-danger\">\n//             Unassigned Me\n//           </button>\n//         </td>\n//       </tr>\n//       <tr>\n//         <td>Monthly Individual</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>2020-06-09</td>\n//         <td>2020-06-09</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-primary\">You</span>\n//         </td>\n//         <td>\n//           <button type=\"button\" className=\"btn btn-danger\">\n//             Unassigned Me\n//           </button>\n//         </td>\n//       </tr>\n//       <tr>\n//         <td>Monthly Individual</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>2020-06-09</td>\n//         <td>2020-06-09</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-primary\">You</span>\n//         </td>\n//         <td>\n//           <button type=\"button\" className=\"btn btn-danger\">\n//             Unassigned Me\n//           </button>\n//         </td>\n//       </tr>\n//       <tr>\n//         <td>Monthly Individual</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>2020-06-09</td>\n//         <td>2020-06-09</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-primary\">You</span>\n//         </td>\n//         <td>\n//           <button type=\"button\" className=\"btn btn-danger\">\n//             Unassigned Me\n//           </button>\n//         </td>\n//       </tr>\n//       <tr>\n//         <td>Monthly Individual</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>2020-06-09</td>\n//         <td>2020-06-09</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-primary\">You</span>\n//         </td>\n//         <td>\n//           <button type=\"button\" className=\"btn btn-danger\">\n//             Unassigned Me\n//           </button>\n//         </td>\n//       </tr>\n//       <tr>\n//         <td>Monthly Individual</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>\n//           <span className=\"badge badge-pill badge-success\">Active</span>\n//         </td>\n//         <td>2020-06-09</td>\n//         <td>2020-06-09</td>\n//         <td>\n//           <span className=\"badge badge-pill badge-primary\">You</span>\n//         </td>\n//         <td>\n//           <button type=\"button\" className=\"btn btn-danger\">\n//             Unassigned Me\n//           </button>\n//         </td>\n//       </tr>\n//       </tbody>\n//     </table>\n//   </div>\n// </main>\n\nexport default Dashboard;\n","import React from \"react\";\nimport TopNav from \"./common/topnav\";\nimport SideNav from \"./common/sidenav\";\n\nconst Subscriptions = () => {\n  return (\n      <div id=\"page-wrapper\" className=\"dashboard-wrapper\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"white-box\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h5>Subscriptions</h5>\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                      <div id=\"tableActiveSubscriptions_wrapper\" className=\"dataTables_wrapper dt-bootstrap4 no-footer\">\n                        <div className=\"row\">\n                          <div className=\"col-sm-12 col-md-6\">\n                            <div className=\"dataTables_length\" id=\"tableActiveSubscriptions_length\">\n                              <label>Show\n                                <select name=\"tableActiveSubscriptions_length\" aria-controls=\"tableActiveSubscriptions\"\n                                        className=\"custom-select custom-select-sm form-control form-control-sm\">\n                                  <option value=\"10\">10</option>\n                                  <option value=\"25\">25</option>\n                                  <option value=\"50\">50</option>\n                                  <option value=\"100\">100</option>\n                                </select>\n                                entries</label>\n                            </div>\n                          </div>\n                          <div className=\"col-sm-12 col-md-6 text-right p-r-20\">\n                            <div id=\"tableActiveSubscriptions_filter\" className=\"dataTables_filter\">\n                              <label>Search:\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"\"\n                                       aria-controls=\"tableActiveSubscriptions\"/>\n                              </label>\n                            </div>\n                          </div>\n                        </div>\n                        <table className=\"tablesaw table-bordered table-hover table\" data-tablesaw-sortable>\n                          <thead>\n                          <tr>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"persist\">Subscriptions type\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"3\">Is active?\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"2\">State\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"1\">Occupied/Quantity\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"4\">Started from\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"5\">Valid until\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"6\">Action\n                            </th>\n                          </tr>\n                          </thead>\n                          <tbody>\n                          <tr>\n                            <td className=\"title\"><a href=\"#\">Monthly Individual</a></td>\n                            <td><span className=\"label label-success\">Active</span></td>\n                            <td><span className=\"label label-success\">Active</span></td>\n                            <td>1/1</td>\n                            <td>2020-06-09</td>\n                            <td>2020-06-09</td>\n                            <td><button className=\"btn btn-info\" data-toggle=\"modal\"\n                                   data-target=\"#responsive-modal\">View Details</button></td>\n                          </tr>\n                          <tr>\n                            <td className=\"title\"><a href=\"#\">Monthly Individual</a></td>\n                            <td><span className=\"label label-success\">Active</span></td>\n                            <td><span className=\"label label-success\">Active</span></td>\n                            <td>1/1</td>\n                            <td>2020-06-09</td>\n                            <td>2020-06-09</td>\n                            <td><button className=\"btn btn-info\" data-toggle=\"modal\"\n                                   data-target=\"#responsive-modal\">View Details</button></td>\n                          </tr>\n                          </tbody>\n                        </table>\n                        <div className=\"row\">\n                          <div className=\"col-sm-6 m-t-20\">\n                            <div className=\"dataTables_info\" id=\"editable-datatable_info\" role=\"status\"\n                                 aria-live=\"polite\">Showing 1 to 10 of 57 entries\n                            </div>\n                          </div>\n                          <div className=\"col-sm-6 text-right\">\n                            <div className=\"dataTables_paginate paging_simple_numbers\" id=\"editable-datatable_paginate\">\n                              <ul className=\"pagination\">\n                                <li className=\"paginate_button previous disabled\" aria-controls=\"editable-datatable\"\n                                    tabIndex=\"0\" id=\"editable-datatable_previous\"><a href=\"#\">Previous</a></li>\n                                <li className=\"paginate_button active\" aria-controls=\"editable-datatable\" tabIndex=\"0\">\n                                  <a href=\"#\">1</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">2</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">3</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">4</a></li>\n                                <li className=\"paginate_button next\" aria-controls=\"editable-datatable\" tabIndex=\"0\"\n                                    id=\"editable-datatable_next\"><a href=\"#\">Next</a></li>\n                              </ul>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <footer className=\"footer text-center\"> 2021 &copy; Ria Note</footer>\n      </div>\n  );\n};\n\nexport default Subscriptions;\n","import React from \"react\";\nimport TopNav from \"./common/topnav\";\nimport SideNav from \"./common/sidenav\";\n\nconst Orders = () => {\n  return (\n      <div id=\"page-wrapper\" className=\"dashboard-wrapper\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"white-box\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h5>Order</h5>\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                      <div id=\"tableActiveSubscriptions_wrapper\" className=\"dataTables_wrapper dt-bootstrap4 no-footer\">\n                        <div className=\"row\">\n                          <div className=\"col-sm-12 col-md-6\">\n                            <div className=\"dataTables_length\" id=\"tableActiveSubscriptions_length\">\n                              <label>Show\n                                <select name=\"tableActiveSubscriptions_length\" aria-controls=\"tableActiveSubscriptions\"\n                                        className=\"custom-select custom-select-sm form-control form-control-sm\">\n                                  <option value=\"10\">10</option>\n                                  <option value=\"25\">25</option>\n                                  <option value=\"50\">50</option>\n                                  <option value=\"100\">100</option>\n                                </select>\n                                entries</label>\n                            </div>\n                          </div>\n                          <div className=\"col-sm-12 col-md-6 text-right p-r-20\">\n                            <div id=\"tableActiveSubscriptions_filter\" className=\"dataTables_filter\">\n                              <label>Search:\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"\"\n                                       aria-controls=\"tableActiveSubscriptions\"/>\n                              </label>\n                            </div>\n                          </div>\n                        </div>\n                        <table className=\"tablesaw table-bordered table-hover table\" data-tablesaw-sortable>\n                          <thead>\n                          <tr>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"persist\">Reference on FastSpring\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"3\">Invoice URL\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"2\">Total price\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"1\">Is completed?\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"4\">Purchased at\n                            </th>\n                            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col\n                                data-tablesaw-priority=\"5\">Linked Subscription\n                            </th>\n                          </tr>\n                          </thead>\n                          <tbody>\n                          <tr>\n                            <td className=\"title\"><a href=\"javascript:void(0)\">NOT200609-4454-93252</a></td>\n                            <td><a href=\"#\">Invoice</a></td>\n                            <td>USD 15</td>\n                            <td>2020-06-09</td>\n                            <td><span className=\"label label-info\">Completed</span></td>\n                            <td><a href=\"#\">Monthly Individual</a></td>\n                          </tr>\n                          <tr>\n                            <td className=\"title\"><a href=\"javascript:void(0)\">NOT200609-4454-93252</a></td>\n                            <td><a href=\"#\">Invoice</a></td>\n                            <td>USD 15</td>\n                            <td>2020-06-09</td>\n                            <td><span className=\"label label-info\">Completed</span></td>\n                            <td><a href=\"#\">Monthly Individual</a></td>\n                          </tr>\n                          </tbody>\n                        </table>\n                        <div className=\"row\">\n                          <div className=\"col-sm-6 m-t-20\">\n                            <div className=\"dataTables_info\" id=\"editable-datatable_info\" role=\"status\"\n                                 aria-live=\"polite\">Showing 1 to 10 of 57 entries\n                            </div>\n                          </div>\n                          <div className=\"col-sm-6 text-right\">\n                            <div className=\"dataTables_paginate paging_simple_numbers\" id=\"editable-datatable_paginate\">\n                              <ul className=\"pagination\">\n                                <li className=\"paginate_button previous disabled\" aria-controls=\"editable-datatable\"\n                                    tabIndex=\"0\" id=\"editable-datatable_previous\"><a href=\"#\">Previous</a></li>\n                                <li className=\"paginate_button active\" aria-controls=\"editable-datatable\" tabIndex=\"0\">\n                                  <a href=\"#\">1</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">2</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">3</a></li>\n                                <li className=\"paginate_button \" aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                    href=\"#\">4</a></li>\n                                <li className=\"paginate_button next\" aria-controls=\"editable-datatable\" tabIndex=\"0\"\n                                    id=\"editable-datatable_next\"><a href=\"#\">Next</a></li>\n                              </ul>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <footer className=\"footer text-center\"> 2021 &copy; Ria Note</footer>\n      </div>\n  );\n};\n\nexport default Orders;\n","import React from \"react\";\n\nconst Notifications = () => {\n    return (\n        <div id=\"page-wrapper\" className=\"dashboard-wrapper\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"white-box\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h5>Notifications</h5>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        <div id=\"tableActiveSubscriptions_wrapper\"\n                                             className=\"dataTables_wrapper dt-bootstrap4 no-footer\">\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12 m-b-10\">\n                                                    <button className=\"btn btn-success btn-sm\" id=\"btnNewNote\"\n                                                            data-toggle=\"modal\" data-target=\"#responsive-modal\">Mark all\n                                                        as read\n                                                    </button>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-12 col-md-6\">\n                                                    <div className=\"dataTables_length\"\n                                                         id=\"tableActiveSubscriptions_length\">\n                                                        <label>Show\n                                                            <select name=\"tableActiveSubscriptions_length\"\n                                                                    aria-controls=\"tableActiveSubscriptions\"\n                                                                    className=\"custom-select custom-select-sm form-control form-control-sm\">\n                                                                <option value=\"10\">10</option>\n                                                                <option value=\"25\">25</option>\n                                                                <option value=\"50\">50</option>\n                                                                <option value=\"100\">100</option>\n                                                            </select>\n                                                            entries</label>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-sm-12 col-md-6 text-right p-r-20\">\n                                                    <div id=\"tableActiveSubscriptions_filter\"\n                                                         className=\"dataTables_filter\">\n                                                        <label>Search:\n                                                            <input type=\"search\"\n                                                                   className=\"form-control form-control-sm\"\n                                                                   placeholder=\"\"\n                                                                   aria-controls=\"tableActiveSubscriptions\"/>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <table className=\"tablesaw table-bordered table-hover table\"\n                                                   data-tablesaw-sortable>\n                                                <thead>\n                                                <tr>\n                                                    <th scope=\"col\" data-tablesaw-sortable-col\n                                                        data-tablesaw-sortable-default-col\n                                                        data-tablesaw-priority=\"persist\">Content\n                                                    </th>\n                                                    <th scope=\"col\" data-tablesaw-sortable-col\n                                                        data-tablesaw-sortable-default-col\n                                                        data-tablesaw-priority=\"2\">Time\n                                                    </th>\n                                                    <th scope=\"col\" data-tablesaw-sortable-col\n                                                        data-tablesaw-sortable-default-col\n                                                        data-tablesaw-priority=\"1\">Action\n                                                    </th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                <tr>\n                                                    <td><i className=\"fa  fa-calendar-o\"></i>&nbsp;Your subscription has\n                                                        been renewed successfully.\n                                                    </td>\n                                                    <td>2021-01-09 10:48:27</td>\n                                                    <td>\n                                                        <button className=\"btn btn-primary btn-sm\" id=\"btndetails\"\n                                                                data-toggle=\"modal\"\n                                                                data-target=\"#responsive-modal\">Details\n                                                        </button>\n                                                        <button className=\"btn btn-success btn-sm\" id=\"btnNewNote\"\n                                                                data-toggle=\"modal\" data-target=\"#responsive-modal\">Mark\n                                                            as read\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td><i className=\"fa  fa-calendar-o\"/>&nbsp;Your subscription has\n                                                        been renewed successfully.\n                                                    </td>\n                                                    <td>2021-01-09 10:48:27</td>\n                                                    <td>\n                                                        <button className=\"btn btn-primary btn-sm\" id=\"btndetails\"\n                                                                data-toggle=\"modal\"\n                                                                data-target=\"#responsive-modal\">Details\n                                                        </button>\n                                                        <button className=\"btn btn-warning btn-sm\" id=\"btnNewNote\"\n                                                                data-toggle=\"modal\" data-target=\"#responsive-modal\">Mark\n                                                            as unread\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td><i className=\"fa   fa-plus\"/>&nbsp;A subscription has been\n                                                        assigned to you.\n                                                    </td>\n                                                    <td>2021-01-09 10:48:27</td>\n                                                    <td>\n                                                        <button className=\"btn btn-primary btn-sm\" id=\"btndetails\"\n                                                                data-toggle=\"modal\"\n                                                                data-target=\"#responsive-modal\">Details\n                                                        </button>\n                                                        <button className=\"btn btn-warning btn-sm\" id=\"btnNewNote\"\n                                                                data-toggle=\"modal\" data-target=\"#responsive-modal\">Mark\n                                                            as unread\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td><i className=\"fa fa-shopping-cart\"/>&nbsp;<strong>Your\n                                                        subscription has been renewed successfully.</strong></td>\n                                                    <td><strong>2021-01-09 10:48:27</strong></td>\n                                                    <td>\n                                                        <button className=\"btn btn-primary btn-sm\" id=\"btndetails\"\n                                                                data-toggle=\"modal\"\n                                                                data-target=\"#responsive-modal\">Details\n                                                        </button>\n                                                        <button className=\"btn btn-warning btn-sm\" id=\"btnNewNote\"\n                                                                data-toggle=\"modal\" data-target=\"#responsive-modal\">Mark\n                                                            as unread\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                                </tbody>\n                                            </table>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-6 m-t-20\">\n                                                    <div className=\"dataTables_info\" id=\"editable-datatable_info\"\n                                                         role=\"status\" aria-live=\"polite\">Showing 1 to 10 of 57 entries\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-sm-6 text-right\">\n                                                    <div className=\"dataTables_paginate paging_simple_numbers\"\n                                                         id=\"editable-datatable_paginate\">\n                                                        <ul className=\"pagination\">\n                                                            <li className=\"paginate_button previous disabled\"\n                                                                aria-controls=\"editable-datatable\" tabIndex=\"0\"\n                                                                id=\"editable-datatable_previous\"><a\n                                                                href=\"#\">Previous</a></li>\n                                                            <li className=\"paginate_button active\"\n                                                                aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                                                href=\"#\">1</a></li>\n                                                            <li className=\"paginate_button \"\n                                                                aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                                                href=\"#\">2</a></li>\n                                                            <li className=\"paginate_button \"\n                                                                aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                                                href=\"#\">3</a></li>\n                                                            <li className=\"paginate_button \"\n                                                                aria-controls=\"editable-datatable\" tabIndex=\"0\"><a\n                                                                href=\"#\">4</a></li>\n                                                            <li className=\"paginate_button next\"\n                                                                aria-controls=\"editable-datatable\" tabIndex=\"0\"\n                                                                id=\"editable-datatable_next\"><a href=\"#\">Next</a></li>\n                                                        </ul>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer className=\"footer text-center\"> 2021 &copy; Ria Note</footer>\n        </div>    );\n};\n\nexport default Notifications;\n","import React from \"react\";\n\nconst Requests = () => {\n    return (\n        <div id=\"page-wrapper\" className=\"dashboard-wrapper\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"white-box\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h5>Refund Requests</h5>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        <div id=\"tableActiveSubscriptions_wrapper\"\n                                             className=\"dataTables_wrapper dt-bootstrap4 no-footer\">\n                                            <div className=\"row request-rows\">\n                                                <div className=\"col-sm-12\">\n                                                    <p>You have not submitted any Refund Requests.</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h5>Change Signature Requests</h5>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        <div id=\"tableActiveSubscriptions_wrapper\"\n                                             className=\"dataTables_wrapper dt-bootstrap4 no-footer\">\n                                            <div className=\"row request-rows\">\n                                                <div className=\"col-sm-12\">\n                                                    <p>You have not submitted any Requests to change you Signature.</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer className=\"footer text-center\"> 2021 &copy; Ria Note</footer>\n        </div>\n    );\n};\n\nexport default Requests;\n","import React, { Component } from \"react\";\nimport Joi from 'joi-browser';\nimport { toast } from \"react-toastify\";\nimport { getUser } from \"../services/authService\";\nimport { saveBasicUserData } from \"../services/authService\";\n\nclass Profile extends Component {\n  state = {\n    userData: {id:\"\", email:\"\", name:\"\", password:\"\", npassword:\"\", cpassword:\"\"},\n    errors: {},\n  };\n\n  schema = {\n    email: Joi.string().required().email().label(\"Email\"),\n    name: Joi.string().required().label(\"Name\"),\n    password: Joi.string().label(\"Current Password\"),\n    npassword: Joi.string().label(\"New Password\"),\n    cpassword: Joi.string().label(\"Confirm Password\"),\n  };\n  async componentDidMount() {\n    try {\n      const { userData } = this.state;\n      const { data:user } = await getUser();\n      userData.id = user.id;\n      userData.name = user.name;\n      userData.email = user.email;\n      this.setState({ ...this.state, userData: user });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 500) {\n          toast.error(\"Please login to access application!\", {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  }\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.userData, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //const errors = this.validate();\n    //this.setState({ errors: errors || {} });\n    //if (errors) return;\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const userData = { ...this.state.userData };\n    userData[input.name] = input.value;\n    this.setState({ userData, errors });\n  };\n\n  doSubmit = async () => {\n    try {\n      const { userData } = this.state;\n      const data = await saveBasicUserData(userData);\n      if(data.status==200){\n        toast.success(\"User information is updated successfully!\", {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    } catch (ex) {\n      if (ex.response && ex.response.status === 401) {\n        toast.error(\"Please provide valid credentials!\", {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  };\n  render() {\n    const { userData, error } = this.state;\n    return (\n        <div id=\"page-wrapper\" className=\"dashboard-wrapper\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"white-box\">\n                  <div className=\"card profile\">\n                    <div className=\"card-header\">\n                      <h5>Update My Profile</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      <form onSubmit={this.handleSubmit}>\n                        <div className=\"form-group row m-b-5\">\n                          <label className=\"col-sm-4 col-form-label\">Email:</label>\n                          <div className=\"col-sm-8\">\n                            <input type=\"text\"\n                                   className=\"form-control\"\n                                   value = { (userData && userData[0] && userData[0].email)\n                                       ? userData[0].email : ''\n                                   }/>\n                          </div>\n                        </div>\n                        <div className=\"form-group row m-b-5\">\n                          <label className=\"col-sm-4 col-form-label\">Name:</label>\n                          <div className=\"col-sm-8\">\n                            <input className=\"form-control\"\n                                   // onChange={this.handleChange}\n                                   defaultValue = { (userData && userData[0] && userData[0].name)\n                                       ? userData[0].name : ''\n                                   }\n                            />\n                            {error && <div className=\"alert alert-danger\">{error}</div>}\n                          </div>\n                        </div>\n                        {/*<div className=\"form-group row m-b-5\">*/}\n                        {/*  <label className=\"col-sm-4 col-form-label\">Last name:</label>*/}\n                        {/*  <div className=\"col-sm-8\">*/}\n                        {/*    <input className=\"form-control\" onChange={this.handleChange}/>*/}\n                        {/*  </div>*/}\n                        {/*</div>*/}\n                        <div className=\"form-group row m-b-5\">\n                          <label className=\"col-sm-4 col-form-label\"/>\n                          <div className=\"col-sm-8\">\n                            <button type={\"submit\"} className=\"btn btn-primary btn-sm\">Update Information</button>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                  <div className=\"card profile\">\n                    <div className=\"card-header\">\n                      <h5>Update Password</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      <form onSubmit={this.handleSubmit}>\n                        <div className=\"form-group row m-b-5\">\n                          <label className=\"col-sm-4 col-form-label\">Current password:</label>\n                          <div className=\"col-sm-8\">\n                            <input className=\"form-control\" type=\"password\"/>\n                          </div>\n                        </div>\n                        <div className=\"form-group row m-b-5\">\n                          <label className=\"col-sm-4 col-form-label\">New password:</label>\n                          <div className=\"col-sm-8\">\n                            <input className=\"form-control\" type=\"password\"/>\n                          </div>\n                        </div>\n                        <div className=\"form-group row m-b-5\">\n                          <label className=\"col-sm-4 col-form-label\">Confirm new password:</label>\n                          <div className=\"col-sm-8\">\n                            <input className=\"form-control\" type=\"password\"/>\n                          </div>\n                        </div>\n                        <div className=\"form-group row m-b-5\">\n                          <label className=\"col-sm-4 col-form-label\"></label>\n                          <div className=\"col-sm-8\">\n                            <button type={\"submit\"} className=\"btn btn-primary btn-sm\">Update Password</button>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                  <div className=\"card profile\">\n                    <div className=\"card-header\">\n                      <h5>Update Mailing Subscription</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      <div className=\"form-group row m-b-5\">\n                        <div className=\"col-sm-12\">\n                          <button className=\"btn btn-primary btn-sm\">Subscribe to receive updates from Ria Note</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <footer className=\"footer text-center\"> 2021 &copy; Ria Note</footer>\n        </div>\n    );\n  }\n}\n \nexport default Profile;\n    // <div className=\"col-lg-10 mt-2\">\n    //   <div className=\"card\">\n    //     <h5 className=\"card-header\">Update Profile</h5>\n    //\n    //     <div className=\"card-body\">\n    //       <form onSubmit={this.handleSubmit}>\n    //         <div className=\"form-group row\">\n    //           <label htmlFor=\"email\" className=\"col-sm-3 col-form-label\">\n    //             Email\n    //           </label>\n    //           <div className=\"col-sm-9\">\n    //             <input type=\"email\" className=\"form-control\" onChange={this.handleChange} name=\"email\" id=\"email\"\n    //                    defaultValue={userData.email}/>\n    //           </div>\n    //         </div>\n    //         <div className=\"form-group row\">\n    //           <label htmlFor=\"name\" className=\"col-sm-3 col-form-label\">\n    //             Name\n    //           </label>\n    //           <div className=\"col-sm-9\">\n    //             <input type=\"text\" className=\"form-control\" onChange={this.handleChange} name=\"name\" id=\"name\"\n    //                    defaultValue={userData.name}/>\n    //             {error && <div className=\"alert alert-danger\">{error}</div>}\n    //           </div>\n    //         </div>\n    //         <div className=\"form-group row\">\n    //           <label htmlFor=\"inputEmail3\" className=\"col-sm-3 col-form-label\"></label>\n    //           <div className=\"col-sm-9\">\n    //             <button type=\"submit\" className=\"btn btn-success\">\n    //               Update Information\n    //             </button>\n    //           </div>\n    //         </div>\n    //       </form>\n    //     </div>\n    //\n    //   </div>\n    //   <div className=\"card my-5\">\n    //     <h5 className=\"card-header\">Update Password</h5>\n    //     <div className=\"card-body\">\n    //       <form onSubmit={this.handleSubmit}>\n    //         <div className=\"form-group row\">\n    //           <label htmlFor=\"password\" className=\"col-sm-3 col-form-label\">\n    //             Current Password\n    //           </label>\n    //           <div className=\"col-sm-9\">\n    //             <input type=\"password\" onChange={this.handleChange} className=\"form-control\" id=\"password\"\n    //                    name=\"password\"/>\n    //           </div>\n    //         </div>\n    //         <div className=\"form-group row\">\n    //           <label htmlFor=\"npassword\" className=\"col-sm-3 col-form-label\">\n    //             New Password\n    //           </label>\n    //           <div className=\"col-sm-9\">\n    //             <input type=\"password\" onChange={this.handleChange} className=\"form-control\" id=\"npassword\"\n    //                    name=\"npassword\"/>\n    //           </div>\n    //         </div>\n    //         <div className=\"form-group row\">\n    //           <label htmlFor=\"cpassword\" className=\"col-sm-3 col-form-label\">\n    //             Confirm New Password\n    //           </label>\n    //           <div className=\"col-sm-9\">\n    //             <input type=\"password\" onChange={this.handleChange} className=\"form-control\" id=\"cpassword\"\n    //                    name=\"cpassword\"/>\n    //           </div>\n    //         </div>\n    //         <div className=\"form-group row\">\n    //           <label htmlFor=\"inputEmail3\" className=\"col-sm-3 col-form-label\"></label>\n    //           <div className=\"col-sm-9\">\n    //             <button type=\"submit\" className=\"btn btn-success\">\n    //               Update Password\n    //             </button>\n    //           </div>\n    //         </div>\n    //       </form>\n    //     </div>\n    //   </div>\n    //   <div className=\"card my-5\">\n    //     <h5 className=\"card-header\">Update Mailing Subscription</h5>\n    //     <div className=\"card-body\">\n    //       <form>\n    //         <div className=\"form-group row\">\n    //           <div className=\"col-sm-2\">\n    //             <button type=\"submit\" className=\"btn btn-success\">\n    //               Subscribe To Recieve Updates From Ria NoteDesigner\n    //             </button>\n    //           </div>\n    //         </div>\n    //       </form>\n    //     </div>\n    //   </div>\n    // </div>\n","import React from \"react\";\n\nconst GetStarted = () => {\n  return (\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <p class=\"card-text\">\n          To get started you need to do two things: (1) Assign your subscription\n          to yourself and then (2) set up your signature line. Both of these can\n          be done on the main DASHBOARD page, and should not take more than a\n          minute.\n        </p>\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\">\n            <b>Assigning subscription(s):</b> Sometimes people purchase\n            subscriptions for others, so first we ask you to confirm who the\n            user will be, for each subscription you purchase. Scroll down to the\n            bottom of your DASHBOARD, and click the button to assign the\n            subscription to yourself. (Or, if you want to assign the\n            subscription to someone else, just enter their email address.) If\n            you are managing a group subscription you can eventually assign all\n            the slots to others, or assign one to yourself and the rest to other\n            members of your group.\n          </li>\n          <li class=\"list-group-item\">\n            <b>Signature line:</b> Then once you have assigned a subscription to\n            yourself you can set up your signature line. This should include\n            your name, plus if you wish you can add your degree(s),\n            certifications, and/or the name of your clinic. It’s up to you. Once\n            you have entered it, if you later want to change it you just need to\n            send us a change-request message (from the main DASHBOARD page) and\n            we’ll do it for you.\n          </li>\n        </ul>\n        <p className=\"my-2\">\n          <b>Once you are set up</b> you can click the green button on the\n          DASHBOARD main page to start your first note! There is a help menu if\n          you need it, but you should be able to just click buttons and type\n          things in – and watch your note appear at the right of your screen.\n        </p>\n        <p className=\"my-3\">\n          <b>Eventually</b> you may want to explore the other tabs on the\n          dashboard menu:\n        </p>\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\">\n            <b>My Profile:</b> lists the basic information associated with your\n            account. This is where you can change your password if you would\n            like. Also you can subscribe to receive (infrequent) email relating\n            to Note Designer upgrades or related product information.\n          </li>\n          <li class=\"list-group-item\">\n            <b>My Request:</b> shows any requests you’ve sent to us, such as a\n            request to change your signature line or for a refund (note that\n            refunds are available only during the first 30 days after purchasing\n            your subscription).\n          </li>\n          <li class=\"list-group-item\">\n            <b>My Request:</b> shows any requests you’ve sent to us, such as a\n            request to change your signature line or for a refund (note that\n            refunds are available only during the first 30 days after purchasing\n            your subscription).\n          </li>\n          <li class=\"list-group-item\">\n            <b>My Orders:</b> shows you information about your subscriptions,\n            including a link to the relevant invoice. If you wish more detailed\n            information you can use the button near the top of the main\n            DASHBOARD page to get a link to your account with Fastspring, our\n            online retail partner. Fastspring is a popular international\n            platform for managing subscriptions for digital products such as\n            Note Designer. They handle all the billing-related issues for your\n            account (including securely managing your credit card information).\n          </li>\n          <li class=\"list-group-item\">\n            <b>My Subscriptions:</b> is where you can see detailed information\n            about your subscription(s). This will be particularly useful to you\n            if you manage multiple subscriptions for a clinic.\n          </li>\n          <li class=\"list-group-item\">\n            <b>My Notifications:</b> lists any notifications we have sent to\n            you, for example when you set up your account or assign\n            subscriptions to yourself or others.\n          </li>\n        </ul>\n        <p className=\"my-2\">\n          Cancellation: We are confident that you will find Note Designer\n          useful. That said, you may decide at some point that it is not what\n          you need and you would like to cancel your subscription. If you\n          started your subscription less than 30 days ago you can use the Refund\n          button on your Dashboard. If it has been 30 days or more, go here:\n          Cancel Subscription page\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default GetStarted;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../../services/authService\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  render,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!auth.getToken()) return <Redirect to=\"/login\" />;\n        return <Component {...props} {...rest} />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Switch, Link } from \"react-router-dom\";\nimport TopNav from \"../common/topnav\";\nimport SideNav from \"../common/sidenav\";\nimport Modal from \"../common/modal\";\nimport Dashboard from \"../dashboard\";\nimport Subscription from \"../subscriptions\";\nimport Orders from \"../orders\";\nimport Notifications from \"../notifications\";\nimport Requests from \"../requests\";\nimport Profile from \"../profile\";\nimport GetStarted from \"../getstarted\";\nimport Myprofile from \"../myprofile\";\nimport ProtectedRoute from \"../common/ProtectedRoute\";\nimport { getUser } from \"../../services/authService\";\nimport { getNotes } from \"../../services/noteService\";\nimport Type from \"../type\";\n\nclass DashboardLayout extends Component {\n  state = {\n    noteType: {},\n    classes: {},\n    notes: [],\n    user: [],\n    errors: {},\n  };\n  async componentDidMount() {\n    try {\n      console.log(\"here in pvt  layout!\");\n      const { data: notes } = await getNotes();\n      const { data: user } = await getUser();\n      await this.setState({...this.state, user: user} );\n      this.setState({ notes: notes[\"success\"] });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 500) {\n          toast.error(\"Please login to access application!\", {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  }\n  handleType = (type) => {\n    let { noteType } = this.state;\n    noteType = type;\n    this.setState({ ...this.state, noteType: noteType });\n    console.log(noteType);\n  };\n  handleSelection = () => {\n    let { noteType } = this.state;\n    noteType = {};\n    this.setState({ noteType });\n  };\n\n  goNote = () => {\n    const { noteType } = this.state;\n    const url = noteType ? \"/\" + noteType : \"\";\n    window.location = \"/note\" + url;\n  };\n  render() {\n    const { notes, noteType } = this.state;\n    const Getstart = <GetStarted />;\n    //const GetMyprofil = <Myprofile user={this.state.user} />;\n    return (\n      <React.Fragment>\n        <TopNav user={this.state.user} />\n        {/*<div className=\"container-fluid\">*/}\n        {/*  <div className=\"row\">*/}\n            <SideNav />\n            <Switch>\n              <ProtectedRoute\n                exact\n                path=\"/dashboard\"\n                user={this.state.user}\n                component={Dashboard}\n              />\n              <ProtectedRoute\n                exact\n                user={this.state.user}\n                path=\"/profile\"\n                component={Profile}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/subscriptions\"\n                component={Subscription}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/orders\"\n                component={Orders}/>\n              <ProtectedRoute\n                exact\n                path=\"/notifications\"\n                component={Notifications}/>\n              <ProtectedRoute\n                exact\n                path=\"/myRequests\"\n                component={Requests}/>\n            </Switch>\n            <Modal\n              modalid=\"Getstart\"\n              title=\"Get Started\"\n              content={Getstart}\n              maxwidget=\"80%\"\n            />\n          {/*</div>*/}\n        <div\n            className=\"modal fade\"\n            id=\"responsive-modal\"\n            tabIndex=\"-1\"\n            aria-labelledby=\"responsive-modalLabel\"\n            aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Start a new note</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n              </div>\n              <div className=\"modal-body\">\n                <p>Choose Note Type:</p>\n                <form>\n                  {notes.map((note) => (\n                      <div className=\"checkbox checkbox-info checkbox-circle\" key={note.id}>\n                        <input id={note.id} type=\"checkbox\" name=\"notes\"\n                               onClick={() => this.handleType(note.id)}/>\n                        <label htmlFor={note.id}>{note.name}</label>\n                      </div>\n                  ))}\n                </form>\n                <p> Notice: the content of the current note will be discarded if you choose to open a new note on the current tab.</p>\n              </div>\n              <div className=\"modal-footer\">\n                <Link type=\"button\"\n                        className=\"btn btn-info waves-effect waves-light\"\n                        onClick={this.goNote}>\n                  Start a new note\n                </Link>\n                <button type=\"button\" className=\"btn btn-default waves-effect\"\n                        data-dismiss=\"modal\"\n                        onClick={this.handleSelection}\n                >Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst NoteTopNav = (user) => {\n    let person = user && user[\"user\"] ? user[\"user\"][0] : [];\n    return (\n      <nav className=\"navbar navbar-default navbar-static-top m-b-0\">\n          <div className=\"navbar-header\">\n              <div className=\"top-left-part\">\n                  <a className=\"logo\" href=\"/\">\n                      <b><i className=\"fa fa-home\"/>&nbsp; Ria Note</b></a>\n                  <button className=\"btn btn-success btn-sm\" id=\"btnNewNote\" data-toggle=\"modal\"\n                          data-target=\"#responsive-modal\"><i className=\"fa fa-plus\"/> New Note\n                  </button>\n              </div>\n              <ul className=\"nav navbar-top-links navbar-right pull-right\">\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link\" href=\"#\" data-toggle=\"modal\"\n                         data-target=\"#help\">\n                          <i className=\"fa fa-question-circle\"/>&nbsp;Help </a></li>\n                  <li>\n                      <a href=\"\" data-toggle=\"modal\" data-target=\"#preference\">\n                          <i className=\"fa fa-cogs\"/>&nbsp;Preferences</a></li>\n                  <li className=\"dropdown\"><a className=\"dropdown-toggle profile-pic\" data-toggle=\"dropdown\" href=\"#\">\n                      <img src=\"/plugins/images/users/varun.jpg\" alt=\"user-img\" width=\"36\" className=\"img-circle\"/>\n                      { (person && person.name)\n                          ? <b className=\"hidden-xs\">{ person.name }</b>\n                          : <h4>\"Anonymous\"</h4>\n                      }</a>\n                      <ul className=\"dropdown-menu dropdown-user animated flipInY\">\n                          <li>\n                              <div className=\"dw-user-box\">\n                                  <div className=\"u-img\"><img src=\"/plugins/images/users/varun.jpg\" alt=\"user\"/></div>\n                                  <div className=\"u-text\">\n                                      { (person && person.name)\n                                          ? <h4> {person.name} </h4> : <h4>\"Anonymous\"</h4>\n                                      }\n                                      { (person && person.name)\n                                          ? <p className=\"text-muted\">{ person.email }</p> : <h4>\"Anonymous\"</h4>\n                                      }\n                                  </div>\n                              </div>\n                          </li>\n                          <li role=\"separator\" className=\"divider\"/>\n                          <li><a href=\"/dashboard\"><i className=\"ti-user\"/> Dashboard </a></li>\n                          <li><a href=\"/logout\"><i className=\"fa fa-power-off\"/> Logout </a></li>\n                      </ul>\n                  </li>\n                </ul>\n          </div>\n    </nav>\n  );\n};\n\nexport default NoteTopNav;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass LeftItems extends Component {\n  render() {\n    const { section, sid, index, selectedType, selectedSubType, getSectionQuestions } = this.props;\n    const devId = \"#\" + section.name;\n    return (\n      <React.Fragment>\n        <li\n            key={sid}\n            role=\"presentation\"\n            onClick={() => selectedType(section)}\n            className={this.getClasses()}\n        >\n            <a href={\"#\"+section.name} aria-controls=\"headings\" role=\"tab\"\n               data-toggle=\"tab\" aria-expanded=\"true\" data-target={devId}>\n              <span className=\"visible-xs\">\n                <i className=\"ti-home\"/>\n              </span>\n              <span className=\"hidden-xs\"> {section.name}\n              </span>\n            </a>\n        </li>\n      </React.Fragment>\n    );\n  }\n\n  getClasses() {\n    const { section, index, selected } = this.props;\n    let classes = \"\";\n    classes += index === selected.id - 1 ? \"active\" : \"\";\n    return classes;\n  }\n}\n\nexport default LeftItems;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/option\";\n\nexport function saveOptionWithId(id, option_text) {\n    return http.put(apiEndpoint + '/' + id, {option_text});\n}\n","import React, {useState} from \"react\";\nimport { saveOptionWithId } from \"../../services/optionService\"\n\nconst Options = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [optionText, setOptionText] = useState(props.option.option_text);\n    const saveOption = async (id) => {\n        await saveOptionWithId(id, optionText).then(async response => {\n             await setOptionText(response.data.option_text);\n        });\n        setEditMode(false);\n    }\n\n    const selectOpt = (typ, ques, optText, setContnt, optId) => {\n        if (props.isSelectedOption === optId) {\n            props.handleSelectedOption(null);\n            props.selectOption(typ, ques, null, setContnt);\n        } else {\n            props.handleSelectedOption(optId);\n            props.selectOption(typ, ques, optText, setContnt);\n        }\n    }\n\n    return (\n        <div className=\"txtbox\">\n            {!editMode && (props.isSelectedOption !== props.option.id) && <p\n                onClick={() => selectOpt(props.type, props.question, props.option_text, props.setContent, props.option.id)}\n            >\n                {optionText}\n            </p>}\n            {!editMode && (props.isSelectedOption === props.option.id) && <p className={\"introSelected\"}\n                onClick={() => selectOpt(props.type, props.question, props.option_text, props.setContent, props.option.id)}\n            >\n                {optionText}\n            </p>}\n            {\n                editMode === true &&\n                <textarea\n                    className=\"custom-input\"\n                    defaultValue={optionText}\n                    onChange={(e) => {\n                        setOptionText(e.target.value);\n                    }}\n                />\n            }\n            <div className=\"text-controls\">\n                {!editMode && <button type=\"button\" className=\"btn btn-info btn-edit\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                        title=\"\" data-original-title=\"\" onClick={() => setEditMode(true)}><i className=\"fa icon-note\"/></button>}\n                {editMode && <button type=\"button\" className=\"btn btn-success btn-save\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                        title=\"\" data-original-title=\"\" onClick={() => saveOption(props.option.id)}><i className=\"fa fa-save\"/></button>}\n                {editMode && <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                        data-original-title=\"\" onClick={() => setEditMode(false)}><i className=\"fa fa-times\"/></button>}\n            </div>\n        </div>\n    )\n}\n\nexport default Options;","import React, { Component } from \"react\";\nimport Options from \"./Options\";\n\nclass QuestionOPtions extends Component {\n    render() {\n        const { question, key, index, selectOption, setContent,\n            isSelectedOption, handleSelectedOption} = this.props;\n        const type = question.question_type;\n        return (\n          <React.Fragment>\n            <div>\n                <h4>{question.question_text}</h4>\n            </div>\n              { question.options ?\n                  question.options.map((option, ind) => (\n                          <Options option_text = { option.option_text }\n                                   type = { type }\n                                   key = {ind}\n                                   selectOption = { selectOption }\n                                   question = { question }\n                                   option = { option }\n                                   setContent = { setContent }\n                                   isSelectedOption = {isSelectedOption}\n                                   handleSelectedOption = {handleSelectedOption}\n                          />\n                      ))\n                  : (\"\")\n              }\n          </React.Fragment>\n        );\n    }\n}\n\nexport default QuestionOPtions;\n","import React, {Component, useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {saveOptionWithId} from \"../../services/optionService\";\nclass QuestionWithMultiOptions extends Component {\n  state = {\n    isInEditMode: false,\n    optionText: '',\n    optionId: ''\n  }\n\n  selectOpt = (typ, ques, option, optId, setContent) => {\n    if (this.props.quesWithMultiOption[option.id]) {\n      this.props.quesWithMultiOption[option.id] = '';\n    } else {\n      this.props.quesWithMultiOption[option.id] = option.option_text;\n    }\n    this.props.handleQuesWithMultiOption(this.props.quesWithMultiOption);\n    this.props.selectOption(typ, ques, option.option_text, optId, setContent);\n  }\n\n  setEditMode = (id) => {\n    this.setState({isInEditMode: !this.state.isInEditMode});\n    this.setState({optionId: id});\n  }\n\n  setOptionText = (optionText) => {\n    this.setState({optionText: optionText})\n  }\n\n  saveOption = (id) => {\n    saveOptionWithId(id, this.state.optionText).then(response => {\n      this.setOptionText(response.data.option_text);\n    });\n  }\n\n  render() {\n    const { question, key, index, selectOption, setContent } = this.props;\n    const type = question.question_type;\n    const option = question.options\n    return (\n      <React.Fragment>\n        <div>\n          <b>{question.question_text}</b>\n        </div>\n        {question.options ? (\n          <div className=\"row m-2\">\n            {option.map((option) => (\n              <div className=\"col-md-6\"\n                   onDoubleClick={() => this.selectOpt(type, question, option, index, setContent)}\n              >\n                <div className={`txtbox ${this.props.quesWithMultiOption[option.id] ? 'selectedOption' : ''}`}>\n                  { !this.state.isInEditMode && this.state.optionText === '' && <p>{ option.option_text}</p>}\n                  { !this.state.isInEditMode && this.state.optionText !== '' && this.state.optionId === option.id && <p>{ this.state.optionText }</p>}\n                  { !this.state.isInEditMode && this.state.optionText !== '' && this.state.optionId !== option.id && <p>{ option.option_text }</p>}\n\n                  { this.state.isInEditMode === true && this.state.optionText === '' && this.state.optionId === option.id &&\n                    <textarea\n                        className=\"custom-input-multi\"\n                        defaultValue={option.option_text}\n                        onChange={(e) => {\n                          this.setOptionText(e.target.value);\n                        }}\n                    />\n                  }\n\n                  { this.state.isInEditMode === true && this.state.optionText !== '' && this.state.optionId === option.id &&\n                    <textarea\n                        className=\"custom-input-multi\"\n                        defaultValue={this.state.optionText}\n                        onChange={(e) => {\n                          this.setOptionText(e.target.value);\n                        }}\n                    />\n                  }\n\n                  { this.state.isInEditMode === true && this.state.optionText === '' && this.state.optionId !== option.id &&\n                  <p>{ option.option_text}</p>\n                  }\n                  { this.state.isInEditMode === true && this.state.optionText !== '' && this.state.optionId !== option.id &&\n                  <p>{ option.option_text}</p>\n                  }\n\n                  <div className=\"text-controls\">\n                    {!this.state.isInEditMode && <button type=\"button\" className=\"btn btn-info btn-edit\" data-toggle=\"tooltip\"\n                            data-placement=\"bottom\" title=\"\" data-original-title=\"\" onClick={() => this.setEditMode(option.id)}>\n                      <i className=\"fa icon-note\"/>\n                    </button>}\n\n                    {this.state.isInEditMode && this.state.optionId === option.id && <button type=\"button\" className=\"btn btn-success btn-save\" data-toggle=\"tooltip\"\n                            data-placement=\"bottom\" title=\"\" data-original-title=\"\"\n                            onClick={() => this.saveOption(option.id)}><i className=\"fa fa-save\"/>\n                    </button>}\n\n                    {this.state.isInEditMode && this.state.optionId === option.id && <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                            title=\"\" data-original-title=\"\" onClick={() => this.setState({isInEditMode: false})}><i className=\"fa fa-times\"/></button>}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default QuestionWithMultiOptions;\n","import React, { Component } from \"react\";\nimport reactStringReplace from 'react-string-replace';\nclass QuestionWithOptions extends Component {\n\n    selectOpt = (typ, ques, optText, optId) => {\n        this.props.quesWithOption[ques.id] = optId;\n        this.props.handleQuesWithOption(this.props.quesWithOption);\n        this.props.selectOption(typ, ques, optText);\n    }\n\n  render() {\n    const { question, key, index, selectOption, handleQuesWithOption, quesWithOption } = this.props;\n    const questionText = question.question_text;\n    const option = question.options;\n\n    const finalContent = reactStringReplace(questionText,'*|option_text|*', (match, i) => (\n        <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n        {option.map((item, index) => (\n            <label\n                className={`btn btn-info mt-2 mb-2 ml-1 ${quesWithOption[question.id] === item.id? 'selectedOption' : ''}`}\n                onClick={() => this.selectOpt(type, question, item.option_text, item.id)}>\n                  { item.option_text }\n            </label>\n        ))}\n         <label className=\"btn btn-clear btn-danger ml-1\" onClick={() => this.selectOpt(type, question, '')}>\n            <i className=\"fa fa-times\"/>\n         </label>\n         </div>\n      ));\n\n    const type = question.question_type;\n    return (\n      <React.Fragment>\n        <div className=\"txtbox\">\n            {finalContent}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default QuestionWithOptions;\n","import React, {Component} from \"react\";\n\nclass ChildHeadings extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"row m-b-5\">\n                    <div className=\"col-md-4\">\n                          <textarea\n                              className=\"form-control headingText\"\n                              rows=\"1\"\n                              onChange={(e) => {\n                                  this.props.setHeadingWithContent(e, this.props.id);\n                              }}\n                          >\n\n                          </textarea>\n                    </div>\n                    <div className=\"col-md-6\">\n                          <textarea\n                              className=\"form-control\"\n                              rows=\"1\"\n                              onChange={(e) => {\n                                  this.props.setHeadingWithContent(e, this.props.id);\n                              }}>\n                          </textarea>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <div title=\"Add/Remove heading from current note\">\n                                <div className=\"input-group-append flex-column btn-group-toggle pull-left\"\n                                     data-toggle=\"buttons\">\n                                        <button type=\"button\" name=\"checkboxTemporaryHeadings[]\"\n                                                className={`btn btn-sm btn-info btnSave pull-left ${!this.props.isAdded ? 'introSelected' : ''}`}\n                                                onClick={() => this.props.handleTemporaryHeading(this.props.id)}>\n                                            <i className=\"fa fa-adjust\"></i>\n                                        </button>\n                                </div>\n                            </div>\n                            <button type=\"button\" className=\"btn btn-sm btn-success btnSave pull-left\"\n                                    title=\"Save heading for later use\"\n                                    onClick={() => {\n                                        this.props.saveTempHeadings(this.props.id, this.props.noteType)}}\n                            ><i className=\"fa fa-save\"/></button>\n                            {this.props.number > 0 && <button type=\"button\" className=\"btn btn-sm btn-danger pull-left\"\n                                    title=\"Delete heading\"\n                            onClick={ (this.props.deleteChild) ? () => {\n                                this.props.deleteChild(this.props.childNum, this.props.id)} : '' }><i className=\"fa fa-trash-o\"/></button>\n                            }\n                        </div>\n                    </div>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default ChildHeadings;","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/headings\";\n\nexport function getHeadingsByType(id) {\n    return http.get(apiEndpoint + \"/\" + id);\n}\n\nexport function saveHeading(heading_text, heading_content, note_id, head_id) {\n    return http.post(apiEndpoint + '/save', { heading_text, heading_content, note_id, head_id });\n}\n\nexport function editHeadingById(id, heading_text, heading_content) {\n    return http.put(apiEndpoint + '/' + id, { heading_text, heading_content });\n}\n\nexport function deleteHeadingById(id) {\n    return http.delete(apiEndpoint + '/' + id);\n}\n","import React, {Component, useState} from \"react\";\nimport ChildHeadings from \"./ChildHeadings\";\nimport {saveHeading, deleteHeadingById} from \"../../services/headingService\";\n\nclass Heading extends Component {\n    state = {\n        isInEditMode: false,\n        isWriting: false,\n        isAdded: true,\n        headingsText: [],\n        headingsContent: [],\n        headingIds: [],\n        numChildren: 0,\n        headingId: 1,\n        children: [],\n        childNum: 0\n    }\n\n    componentDidMount() {\n        let children = this.state.children;\n        children.push(<ChildHeadings key={this.state.childNum+1} number={this.state.childNum+1} id={'temp' + this.state.childNum+1}\n                                     setHeadingWithContent = {this.setHeadingWithContent}\n                                     handleTemporaryHeading = {this.handleTemporaryHeading}\n                                     saveTempHeadings = {this.saveTempHeadings}\n                                     noteType = {this.props.noteType}\n                                     isAdded={this.state.isAdded}\n                                     childNum={this.state.childNum+1}\n        />);\n        this.setState({...this.state, children: [...children], childNum: this.state.childNum + 1});\n\n    }\n\n    deleteChild = (ind, head_id) => {\n        if (this.state.headingIds.indexOf(head_id) > -1) {\n            this.state.headingIds = this.removeItemOnce(this.state.headingIds, head_id);\n            this.state.headingsText = this.removeItemOnce(this.state.headingsText, head_id);\n            this.state.headingsContent = this.removeItemOnce(this.state.headingsContent, head_id);\n        }\n        let children = [];\n        this.state.children.forEach((value, index) => {\n            if (index !== ind) {\n                children.push(value);\n            }\n        })\n        this.setState({...this.state, children: [...children], childNum: this.state.childNum - 1});\n    }\n\n    addChild = () => {\n        if (this.state.childNum === 4) {\n            return;\n        }\n        let children = this.state.children;\n        children.push(<ChildHeadings key={this.state.childNum+1} number={this.state.childNum+1} id={'temp' + this.state.childNum+1}\n                                     setHeadingWithContent = {this.setHeadingWithContent}\n                                     handleTemporaryHeading = {this.handleTemporaryHeading}\n                                     saveTempHeadings = {this.saveTempHeadings}\n                                     noteType = {this.props.noteType}\n                                     isAdded={this.state.isAdded}\n                                     deleteChild={this.deleteChild}\n                                     childNum={this.state.childNum}\n        />);\n        this.setState({...this.state, children: [...children], childNum: this.state.childNum + 1});\n    }\n\n    removeItemOnce(arr, value) {\n        var index = arr.indexOf(value);\n        if (index > -1) {\n            arr.splice(index, 1);\n        }\n        return arr;\n    }\n\n    setEditMode = async (id) => {\n        await this.setState({isInEditMode: true});\n        await this.setState({headingId: id});\n    }\n\n    disableEditModeAndSave = (id, noteType) => {\n        this.setState({isInEditMode: false});\n        this.setState({headingId: ''});\n        let headText = (this.state.headingsText[id] ? this.state.headingsText[id] : '');\n        let headContent = (this.state.headingsContent[id] ? this.state.headingsContent[id] : '');\n        saveHeading(headText, headContent, noteType, id).then(response => {\n            this.props.setHeadingWithContent(response.data.success);\n        });\n    }\n\n    saveTempHeadings = (id, noteType) => {\n        let headText = (this.state.headingsText[id] ? this.state.headingsText[id] : '');\n        let headContent = (this.state.headingsContent[id] ? this.state.headingsContent[id] : '');\n        saveHeading(headText, headContent, noteType, id).then(response => {\n            this.props.setHeadingWithContent(response.data.success);\n        });\n    }\n\n    handleHeading = async (id, headingText, headingContent) => {\n        if (this.state.headingIds.indexOf(id) > -1) {\n            this.state.headingIds = this.removeItemOnce(this.state.headingIds, id);\n        } else {\n            this.state.headingIds.push(id);\n        }\n\n        if (headingText === '') {\n            if (this.state.headingsText[id] === '' ||\n                this.state.headingsText[id] === undefined ) {\n                return;\n            }\n        }\n        if (headingContent === '') {\n            if (this.state.headingsContent[id] === '' || this.state.headingsContent[id] === undefined ) {\n                return;\n            }\n        }\n        if (this.state.headingsText[id] == null || this.state.headingsText[id] == '') {\n            this.state.headingsText[id] = headingText;\n        }\n        if (this.state.headingsContent[id] == null || this.state.headingsContent[id] == '') {\n            this.state.headingsContent[id] = headingContent;\n        }\n        await this.props.setHeadingIdsArr(this.state.headingIds);\n        await this.props.setHeadingTextArr(this.state.headingsText);\n        await this.props.setHeadingContentArr(this.state.headingsContent);\n    }\n\n    handleTemporaryHeading = async (id) => {\n        if (this.state.headingIds.indexOf(id) > -1) {\n            this.state.headingIds = this.removeItemOnce(this.state.headingIds, id);\n        } else {\n            this.state.headingIds.push(id);\n        }\n        if (this.state.headingsText[id] === undefined || this.state.headingsContent[id] === undefined) {\n            return;\n        }\n        await this.props.setHeadingIdsArr(this.state.headingIds);\n        await this.props.setHeadingTextArr(this.state.headingsText);\n        await this.props.setHeadingContentArr(this.state.headingsContent);\n    }\n\n    deleteHeading = (id) => {\n        deleteHeadingById(id).then( response => {\n                this.props.setHeadingWithContent(response.data.success)\n            }\n        );\n    }\n\n    addTempHeading = () => {\n        if (this.state.numChildren < 4) {\n            this.setState({numChildren: this.state.numChildren + 1});\n        }\n    }\n\n    setHeadingWithContent = (e, hid) => {\n        this.setState({isWriting: true});\n        if (e.target.value == '') {\n            this.setState({isWriting: false});\n        }\n        if (e.target.className === 'form-control headingText') {\n            this.state.headingsText[hid] = e.target.value;\n        } else {\n            this.state.headingsContent[hid] = e.target.value;\n        }\n    }\n\n    render() {\n        const { headings, setHeadingWithContent, headingContent, noteType,\n            setHeadingIdsArr, setHeadingContentArr, setHeadingTextArr} = this.props;\n        return (\n          <React.Fragment>\n              <div className=\"col-md-2\">\n                  <h1> H </h1>\n              </div>\n              <div className=\"col-md-10 pull-right\">\n                  <h2>Add Headers</h2>\n                  <p>If you wish to add headings to the top of this note, such as Diagnosis, Session Time, or Billing\n                      Code, you can do so here.</p>\n                  <p>Type your own headings below, then use the +/- buttons to add them to the current note. If you\n                      wish to save all of these headings so you can use them in future <strong>progress notes AND\n                          treatment plans,</strong> click 'Save' button next to the heading: </p>\n              </div>\n              <div className=\"clearfix\"></div>\n              <div className=\"container-fluid b-t\">\n                  <h2>Temporary Headings</h2>\n                  <div className=\"row m-b-5\">\n                      <div className=\"col-md-4\">\n                          <h4>Heading</h4>\n                      </div>\n                      <div className=\"col-md-6\">\n                          <h4>Content for current note</h4>\n                      </div>\n                      <div className=\"col-md-2\">\n                          <div className=\"d-flex align-items-center\">\n                              <button className=\"btn btn-sm btn-info\" data-toggle=\"tooltip\" data-placement=\"top\"\n                                      title=\"\" id=\"btnAddRemoveAllTemporaryHeadings\"\n                                      data-original-title=\"Add/Remove all headings from note\"\n                                      aria-describedby=\"tooltip445165\"> +/-\n                              </button>\n                              &nbsp;<span>(all)</span></div>\n                      </div>\n                  </div>\n                  {this.state.children}\n                  <button className=\"btn btn-sm btn-info\" id=\"btnAddAnotherHeading\"\n                        onClick={() => {\n                            this.addChild()\n                        }}>\n                      <i className=\"fa fa-plus\"></i>\n                      Add another heading\n                  </button>\n              </div>\n              <div className=\"container-fluid b-t\">\n                  <h2>Saved Headings</h2>\n                  <div className=\"row m-b-5\">\n                      <div className=\"col-md-4\">\n                          <h4>Heading</h4>\n                      </div>\n                      <div className=\"col-md-6\">\n                          <h4>Content for current note</h4>\n                      </div>\n                      <div className=\"col-md-2\">\n                          <div className=\"d-flex align-items-center\">\n                              <button className=\"btn btn-sm btn-info\" data-toggle=\"tooltip\" data-placement=\"top\"\n                                      title=\"\" data-original-title=\"Add/Remove all headings from note\"\n                                      aria-describedby=\"tooltip445165\"> +/-\n                              </button>\n                              &nbsp;<span>(all)</span></div>\n                      </div>\n                  </div>\n                  { headings.map((heading, index) => (\n                      <div className=\"row m-b-5\" key={index}>\n                          <div className=\"col-md-4\">\n                              <textarea\n                                  className={\"form-control headingText\"}\n                                  disabled = {(this.state.isInEditMode && this.state.headingId === heading.id) ? \"\" : \"disabled\"}\n                                  rows=\"1\"\n                                  onChange={(e) => {\n                                      this.setHeadingWithContent(e, heading.id);\n                                  }}\n                                  value={(!this.state.headingsText[heading.id]) ? heading.heading_text: this.state.headingsText[heading.id]}\n                              >\n                              </textarea>\n                          </div>\n                          <div className=\"col-md-6\">\n                              <textarea\n                                  className={\"form-control headingContent\"}\n                                  rows=\"1\"\n                                  onChange={(e) => {\n                                      this.setHeadingWithContent(e, heading.id);\n                                  }}\n                                  value={(!this.state.headingsContent[heading.id]) ? heading.heading_content: this.state.headingsContent[heading.id]}\n                              >\n\n                              </textarea>\n                          </div>\n                          <div className=\"col-md-2\">\n                              <div className=\"btn-group\" role=\"group\">\n                                  <div title=\"Add/Remove heading from current note\">\n                                      <div className=\"input-group-append flex-column btn-group-toggle pull-left\"\n                                           data-toggle=\"buttons\">\n                                              <button type=\"button\" name=\"checkboxTemporaryHeadings[]\"\n                                                      className={`btn btn-sm btn-info btnSave pull-left ${!this.state.isAdded ? 'introSelected' : ''}`}\n                                                      autoComplete=\"off\"\n                                                      onClick={() => this.handleHeading(heading.id, heading.heading_text, heading.heading_content)}>\n                                              <i className=\"fa fa-adjust\"></i>\n                                              </button>\n                                      </div>\n                                  </div>\n                                  {!this.state.isInEditMode && <button type=\"button\" className=\"btn btn-sm btn-warning btnSave pull-left\"\n                                           title=\"Save heading for later use\" onClick={() => {\n                                      this.setEditMode(heading.id)}}>\n                                      <i className=\"fa fa-edit\"></i></button>\n                                  }\n\n                                  {this.state.isInEditMode && this.state.headingId !== heading.id && <button type=\"button\" className=\"btn btn-sm btn-warning btnSave pull-left\"\n                                           title=\"Save heading for later use\" onClick={() => {\n                                      this.setEditMode(heading.id)}}>\n                                      <i className=\"fa fa-edit\"></i></button>\n                                  }\n\n                                  {this.state.isInEditMode && this.state.headingId === heading.id &&\n                                        <button type=\"button\" className=\"btn btn-sm btn-success btnSave pull-left\"\n                                        title=\"Save heading for later use\"\n                                        disabled = {(this.state.isWriting && this.state.headingId === heading.id) ? \"\" : \"disabled\"}\n                                        onClick={() => {\n                                        this.disableEditModeAndSave(heading.id, noteType)}}><i className=\"fa fa-save\"></i></button>\n                                  }\n\n                                  <button type=\"button\" className=\"btn btn-sm btn-danger pull-left\"\n                                          title=\"Delete heading\"\n                                          onClick={() => {\n                                          this.deleteHeading(heading.id)}}><i className=\"fa fa-trash-o\"></i></button>\n                              </div>\n                          </div>\n                      </div>\n                  ))}\n              </div>\n          </React.Fragment>\n        );\n    }\n}\n\nexport default Heading;\n","import React, { Component } from \"react\";\nimport QuestionOPtions from \"./QuestionOptions\";\nimport QuestionWithMultiOptions from \"../notes/QuestionWithMultiOptions\";\nimport QuestionWithOption from \"../notes/QuestionWithOptions\";\nimport reactStringReplace from \"react-string-replace\";\nimport { IconButton, TextField } from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { SearchSharp } from \"@material-ui/icons\";\nimport Heading from \"../headings/Heading\";\nclass SubItems extends Component {\n    state = {\n        name: \"\",\n        date: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        fee: \"\",\n        start_comments: \"\",\n        end_comments: \"\",\n        isSelectedOption : null,\n        quesWithOption : []\n    };\n\n    handleSelectedOption = (id) => {\n        this.setState({isSelectedOption: id});\n    }\n\n    handleQuesWithOption = async (quesWithOption) => {\n        await this.setState({...this.state, quesWithOption: [...quesWithOption]});\n    }\n\n\n    handleOption = (type, question, option, id) => {\n        const content = this.props.content;\n        const qid = question.id;\n        if (type == 'Text' && question.selection_type == 'Single') {\n            content[qid] = option;\n        } else if (type == 'Tags') {\n            let c = reactStringReplace(question.question_text,'*|option_text|*', (match, i) => (option))\n            content[qid] = c;\n            if (option === '') {\n                content[qid] = null;\n            }\n        } else if (type == 'Text' && question.selection_type == 'Multiple') {\n            let c = this.props.quesWithMultiOption;\n            let alreadyExist = true;\n            content[qid] = '';\n            if (content[qid]) {\n                alreadyExist = false;\n            }\n\n            {question.options.map((opt) => (\n                ( c[opt.id] && c[opt.id] !== '' ?\n                    content[qid] = content[qid] + c[opt.id] + ', '\n                    :\n                '')\n            ))}\n\n            if (alreadyExist) {\n                content[qid] = question.question_text + ' ' + content[qid];\n                content[qid] = content[qid].replace(/,\\s*$/, \"\") + '.';\n            }\n\n            if (content[qid] == question.question_text + ' .') {\n                content[qid] = '';\n            }\n        }\n        this.props.setContent(content);\n        this.setState({id});\n    };\n\n    SwitchCase = (question, index, setContent) => {\n        switch (question.question_type) {\n            case 'Text' :\n                switch (question.selection_type) {\n                    case 'Single':\n                        return (\n                            <QuestionOPtions\n                                key={index}\n                                question={question}\n                                index={index}\n                                selectOption={this.handleOption}\n                                setContent={setContent}\n                                isSelectedOption = {this.state.isSelectedOption}\n                                handleSelectedOption = {this.handleSelectedOption}\n                            />\n                        );\n                    case 'Multiple':\n                        return (\n                            <QuestionWithMultiOptions\n                                key={question.id}\n                                question={question}\n                                index={index}\n                                selectOption={this.handleOption}\n                                setContent={setContent}\n                                quesWithMultiOption = {this.props.quesWithMultiOption}\n                                handleQuesWithMultiOption= {this.props.handleQuesWithMultiOption}\n                            />\n                        );\n                }\n                break;\n\n            case 'Tags':\n                return (\n                    <QuestionWithOption\n                        key={question.id}\n                        question={question}\n                        index={index}\n                        selectOption={this.handleOption}\n                        quesWithOption = {this.state.quesWithOption}\n                        handleQuesWithOption= {this.handleQuesWithOption}\n                    />\n                );\n\n            default:\n                return (\n                    <QuestionOPtions\n                        key={question.id}\n                        question={question}\n                        index={index}\n                        selectOption={this.handleOption}\n                        isSelectedOption = {this.state.isSelectedOption}\n                        handleSelectedOption = {this.handleSelectedOption}\n                    />\n                );\n        }\n    };\n\n    render() {\n        const { questions, headings, section, key, index, selected, selectedType, selectedSubType,\n            getSectionQuestions, setContent, content, setHeadingWithContent, headingContent, noteType,\n            setHeadingIdsArr, setHeadingTextArr, setHeadingContentArr} = this.props;\n        const devId = \"#\" + section.name;\n        return (\n            <React.Fragment>\n                    {section.name !== 'Headings' ?\n                        <div className={this.getCollapse(index)} id={devId}>\n                            <div className=\"col-md-3\">\n                                <div className=\"vtabs\">\n                                    <ul className=\"nav tabs-vertical\">\n                                          {section.children.map((item, ind) => (\n                                              <li\n                                                  key={ind}\n                                                  onClick={() => getSectionQuestions(item.id)}\n                                                  className={ \"tab \" + this.getSubClasses(item.id)}>\n                                                  <a href={\"#sub\"+item.id} data-toggle=\"tab\" aria-expanded=\"true\">\n                                                      <span className=\"visible-xs\">\n                                                        <i className=\"ti-home\"/>\n                                                        </span>\n                                                      <span className=\"hidden-xs\"> {item.name}</span>\n                                                  </a>\n                                              </li>\n                                          ))}\n                                        </ul>\n                                </div>\n                            </div>\n                            <div className=\"col-md-9\">\n                                <div className=\"tab-content tab-display\">\n                                    <form className=\"form-group\" role=\"search\">\n                                        <div className=\"input-group\">\n                                            <TextField className=\"outlined-search\"\n                                                       label=\"Search\"\n                                                       type=\"search\"\n                                                       variant=\"outlined\"\n                                                       style={{backgroundColor: 'white'}}\n                                                       fullWidth\n                                                       InputProps={{\n                                                           endAdornment: (\n                                                               <InputAdornment position=\"end\">\n                                                                   <IconButton\n                                                                       edge=\"end\"\n                                                                   >\n                                                                       <SearchSharp />\n                                                                   </IconButton>\n                                                               </InputAdornment>\n                                                           )\n                                                       }}\n                                            />\n                                        </div>\n                                    </form>\n                                    {questions && questions[0] && questions.map((question, index) => {\n                                        return <div id={\"sub\"+question.section_id} key={index}>\n                                            {\n                                                this.SwitchCase(question, index, setContent)\n                                            }\n                                        </div>\n                                    })}\n                                    <h4>\n                                        Customized Phrases:\n                                    </h4>\n                                    <p>\n                                        There are currently no customized phrases for this tab.\n                                    </p>\n                                    <button className=\"btn btn-info btn-sm btn-add-option\"><i className=\"fa fa-plus\"/> Add your own custom\n                                        phrase\n                                    </button>\n                                    <button className=\"btn btn-success btn-sm btn-add-shared-custom-phrases\" data-toggle=\"tooltip\"\n                                            data-placement=\"right\" title=\"\" data-original-title=\"\"><i className=\"fa fa-plus\"/> Add new\n                                        custom phrases from ND\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"></div>\n                        </div> :\n                        <div className={this.getCollapse(index) } id={devId}>\n                            <Heading\n                                headings = {headings}\n                                setHeadingWithContent = {setHeadingWithContent}\n                                headingContent = {headingContent}\n                                noteType={noteType}\n                                setHeadingIdsArr={setHeadingIdsArr}\n                                setHeadingTextArr={setHeadingTextArr}\n                                setHeadingContentArr={setHeadingContentArr}\n                            />\n                        </div>\n                    }\n            </React.Fragment>\n        );\n    }\n\n    getClasses() {\n        const { section, index, selected } = this.props;\n        let classes = \"\";\n        classes += index === selected.id - 1 ? \"active\" : \"\";\n        return classes;\n    }\n\n    getCollapse(id) {\n        const { selected } = this.props;\n        let subclass = \"tab-pane\";\n        // console.log(id);\n        subclass += id === (selected.id - 1)  ? \" active in\" : \"\";\n        return subclass;\n    }\n\n    getSubClasses(id) {\n        const { subSelected } = this.props;\n        let subclass = \"\";\n        subclass += id === subSelected ? \"active\" : \"\";\n        return subclass;\n    }\n}\n\nexport default SubItems;\n","import React, { Component } from \"react\";\nimport TopNoteInput from \"./TopNoteInput\";\n\nclass NoteTop extends Component {\n  render() {\n    const {\n      changeTopValue,\n      name,\n      date,\n      start_time,\n      end_time,\n      fee,\n      start_comments,\n      end_comments,\n    } = this.props;\n    return (\n      <div>\n        <form class=\"needs-validation\" novalidate>\n          <div class=\"form-row\">\n            <div class=\"col-md-4 mb-3\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={(event) => changeTopValue(event)}\n              />\n            </div>\n            <div class=\"col-md-2 mb-3\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"date\"\n                name=\"date\"\n                placeholder=\"Date\"\n                value={date}\n                onChange={(event) => changeTopValue(event)}\n              />\n            </div>\n            <div class=\"col-md-2 mb-3\">\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"inputGroupPrepend\">\n                    @\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"start_time\"\n                  name=\"start_time\"\n                  placeholder=\"Start Time\"\n                  value={start_time}\n                  onChange={(event) => changeTopValue(event)}\n                />\n              </div>\n            </div>\n            <div class=\"col-md-2 mb-3\">\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"inputGroupPrepend\">\n                    @\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"end_time\"\n                  name=\"end_time\"\n                  placeholder=\"End Time\"\n                  value={end_time}\n                  onChange={(event) => changeTopValue(event)}\n                />\n              </div>\n            </div>\n            <div class=\"col-md-2 mb-3\">\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"inputGroupPrepend\">\n                    $\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"fee\"\n                  name=\"fee\"\n                  placeholder=\"Fee\"\n                  value={fee}\n                  onChange={(event) => changeTopValue(event)}\n                />\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"col-md-6 mb-3\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"start_comments\"\n                name=\"start_comments\"\n                placeholder=\"Starting Comments\"\n                value={start_comments}\n                onChange={(event) => changeTopValue(event)}\n              />\n            </div>\n            <div class=\"col-md-6 mb-3\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"end_comments\"\n                name=\"end_comments\"\n                placeholder=\"Closing Comments\"\n                value={end_comments}\n                onChange={(event) => changeTopValue(event)}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NoteTop;\n","import React, { Component } from \"react\";\nclass NoteArea extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    const { data } = this.props;\n    return (\n      <dl\n        class=\"dl-horizontal preview-content\"\n        id=\"preview-content\"\n        style={{\n          width: \"210mm\",\n          minHeight: \"297mm\",\n          marginTop: 20,\n          marginLeft: \"10mm\",\n          marginRight: \"10mm\",\n        }}\n      >\n        <dd>\n          <b>Name: </b>\n          {data.name != \"\" ? data.name : \"\"}\n        </dd>\n        <dd>\n          <b>Date: </b>\n          {data.date != \"\" ? data.date : \"\"}\n        </dd>\n        {data.start_time != \"\" ? (\n          <>\n            <dd>\n              <b>Start At: </b>\n              {data.start_time}\n            </dd>\n          </>\n        ) : (\n          \"\"\n        )}\n        {data.end_time != \"\" ? (\n          <>\n            <dd>\n              <b>End At: </b>\n              {data.end_time}\n            </dd>\n          </>\n        ) : (\n          \"\"\n        )}\n        {data.fee != \"\" ? (\n          <>\n            <dd>\n              <b>Session Fee: </b>\n              {data.fee}\n            </dd>\n          </>\n        ) : (\n          \"\"\n        )}\n        <dt>Session Note: </dt>\n        <dd>\n          {data.start_comments + \" \" + \n          data.content.map((con, index) => (\n            con\n          ))\n           + \" \" + \n          data.end_comments}\n        </dd>\n        <br />\n        <br />\n        <hr />\n        <dd>Sara Chuadari</dd>\n        <dd>LCSW</dd>\n        <br />\n        <br />\n        <br />\n      </dl>\n    );\n  }\n}\n\nexport default NoteArea;\n","import React, { Component } from \"react\";\nimport QuestionOPtions from \"../common/QuestionOptions\";\nimport QuestionWithOption from \"../notes/QuestionWithOptions\";\nimport QuestionWithMultiOptions from \"../notes/QuestionWithMultiOptions\";\nimport reactStringReplace from 'react-string-replace';\nimport NoteTop from \"../notes/NoteTop\";\nimport NoteArea from \"../notes/NoteArea\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass NoteRightSide extends Component {\n    state = {\n        iComment: ''\n    };\n\n    handlePdf = () => {\n        const input = document.getElementById(\"noteContent\");\n        html2canvas(input).then((canvas) => {\n            const imgData = canvas.toDataURL(\"image/png\");\n            const pdf = new jsPDF({\n                orientation: \"A4\",\n            });\n            const imgProps = pdf.getImageProperties(imgData);\n            const pdfWidth = pdf.internal.pageSize.getWidth();\n            const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n            pdf.addImage(imgData, \"PNG\", 10, 20, pdfWidth - 20, pdfHeight);\n            pdf.save(\"download.pdf\");\n        });\n    };\n\n    handleConfirmation = () => {\n        confirmAlert({\n            title: 'Confirmation',\n            message: \"Are you sure you want to clear this note AND all selections plus any additional text you have input? Choose 'CANCEL' if you haven't exported or copied the note yet and you want to; or YES to clear it now.\",\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => this.handleClear()\n                },\n                {\n                    label: 'Cancel',\n                }\n            ]\n        });\n    };\n\n    handleCopy = () => {\n        confirmAlert({\n            title: 'Copy',\n            message: \"In this version of Note Designer you copy a note by FIRST highlighting the text. SECOND, you use your usual browser commands for copying. Depending on your browser, you then could use the Edit/Copy menu, for example. Or on Windows you might use ctrl-c (pressing the ‘control’ key and c key at the same time), or right-click on the highlighted area with the mouse and choose Copy. On Macs you could use command-c and in iPad you press the note and choose Copy. Then you can paste the note into a word processor document, much as you would paste anything you have copied.\",\n            buttons: [\n                {\n                    label: 'Close',\n                }\n            ]\n        });\n\n    };\n\n    handleClear = () => {\n        window.location.reload();\n    };\n\n    render() {\n        const { selected, questions, content, noteType,\n            headingIdsArr, headingTextArr, headingContentArr} = this.props;\n        const data = this.state;\n        return (\n            <div className=\"col-md-5\">\n                <div className=\"pnl-preview section-group\">\n                    <div className=\"card-header\">\n                        <button id=\"btn-print\" className=\"btn btn-info btn-sm m-r-5\" onClick={this.handlePdf}>\n                            <i className=\"fa fa-print\"/>\n                            Export\n                        </button>\n                        <button className=\"btn btn-info btn-sm m-r-5\" onClick={this.handleCopy}>\n                            <i className=\"fa fa-copy\"/>\n                            Copy\n                        </button>\n                        <button id=\"btn-edit\" className=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#finalEdit\">\n                            <i className=\"fa fa-edit\"/>\n                            Final edit\n                        </button>\n                        <button id=\"btn-eraser\" className=\"btn btn-danger btn-sm pull-right\" onClick={this.handleConfirmation}>\n                            <i className=\"fa fa-eraser\"/>\n                            Clear\n                        </button>\n                    </div>\n                    <div className=\"card-body container-fluid\">\n                        <div id=\"noteContent\">\n                            <div id=\"generatedNoteContent\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <p className=\"mb-2\"><b>Name:</b> <span className=\"lblDisplay\"\n                                           id=\"lblDisplayName\"/>\n                                            {\n                                                this.props.pname\n                                            }\n                                        </p>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <p className=\"mb-2\"><b>Date:</b> <span className=\"lblDisplay\"\n                                           id=\"lblDisplayDate\"/>\n                                            {\n                                                this.props.pdate\n                                            }\n                                        </p>\n                                    </div>\n                                </div>\n\n                                { this.props.startTime && <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <p className=\"mb-2\"><b>Start at:</b> <span className=\"lblDisplay\"\n                                                                                   id=\"lblDisplayDate\"/>\n                                            {\n                                                this.props.startTime\n                                            }\n                                        </p>\n                                    </div>\n                                </div>}\n\n                                {this.props.endTime && <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <p className=\"mb-2\"><b>End at:</b> <span className=\"lblDisplay\"\n                                                                                 id=\"lblDisplayDate\"/>\n                                            {\n                                                this.props.endTime\n                                            }\n                                        </p>\n                                        </div>\n                                    </div>\n                                }\n                                { headingIdsArr.map((element, index) => {\n                                    return <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <p className=\"mb-2\"><b>{headingTextArr[element]}</b> <span className=\"lblDisplay\"\n                                                 id=\"lblDisplayDate\"/>\n                                                {\n                                                    headingContentArr[element]\n                                                }\n                                            </p>\n                                        </div>\n                                    </div>\n                                })}\n\n                                {this.props.sessionFee && <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <p className=\"mb-2\"><b>Session fee:</b> <span className=\"lblDisplay\"\n                                                                                      id=\"lblDisplayDate\"/>\n                                            {\n                                                this.props.sessionFee\n                                            }\n                                        </p>\n                                    </div>\n                                </div>}\n                                <div className=\"row\"/>\n                                <div className=\"row\" id=\"divOpeningHeading\">\n                                    <div className=\"col-12\">\n                                        <p><b id=\"lblOpeningHeading\">Session Note:</b>\n                                            <br/><br/>\n                                            { this.props.introComment && this.props.introComment + '. ' }\n                                            { this.props.content }\n                                            { this.props.closingComment && ' ' + this.props.closingComment + '.' }\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div id=\"fixedSampleSignature\">\n                                <br/>\n                                <br/>\n                                <br/>\n                                <br/>\n                                ________________________\n                                <div>Sara Chaudhri LCSW</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NoteRightSide;\n","import React, { Component } from \"react\";\nimport LeftItems from \"./LeftItem\";\nimport SubItems from \"./SubItem\";\nimport NoteRightSide from \"./NoteRightSide\";\nimport QuestionWithMultiOptions from \"../notes/QuestionWithMultiOptions\";\n\nclass NoteSideNav extends Component {\n    // state = {\n    //     headingsIdArr: [],\n    //     headingsTextArr: [],\n    //     headingsContentArr: []\n    // };\n    //\n    // handleHeadingIds = async (headingsIdArr) => {\n    //     await this.setState({...this.state, headingsIdArr: headingsIdArr})\n    // }\n    // handleHeadingText = async (headingsTextArr) => {\n    //     await this.setState({...this.state, headingsTextArr: headingsTextArr})\n    // }\n    // handleHeadingContent = async (headingsContentArr) => {\n    //     await this.setState({...this.state, headingsContentArr: headingsContentArr})\n    // }\n\n  handleType = (section) => {\n    let { selected } = this.props;\n    this.props.setSeleted(section);\n    this.setState({ selected: section });\n  };\n\n  handleSubType = (section) => {\n    let { childSelected } = this.props;\n    this.props.setSubSeleted(section);\n    childSelected = section;\n    this.setState({ childSelected });\n  };\n\n  render() {\n    const { sections, selected, childSelected, subSelected, loadQuestionsWithOptions, questions, headings,\n        noteType, pname, pdate, startTime, endTime, sessionFee, introComment, closingComment,\n        setHeadingContent, headingContent, content, setContent, headingIdsArr, headingContentArr, headingTextArr } = this.props;\n      return (\n        <div className=\"col-md-12\">\n            <div className=\"white-box\">\n                <div className=\"row\">\n                    <div className=\"col-md-7\">\n                        <ul className=\"nav customtab2 nav-tabs\" role=\"tablists\">\n                            {sections.map((section, index) => (\n                                <LeftItems\n                                    key={index}\n                                    sid={section.id}\n                                    section={section}\n                                    index={index}\n                                    selected={selected}\n                                    childSelected={childSelected}\n                                    subSelected={subSelected}\n                                    selectedType={this.handleType}\n                                    selectedSubType={this.handleSubType}\n                                    getSectionQuestions = {loadQuestionsWithOptions}\n                                />\n                            ))}\n                        </ul>\n                        <div className=\"slimScrollDiv\" style={{position: 'relative', overflow: 'hidden', width: 'auto', height: '550px'}}>\n                            <div className=\"tab-content\" id=\"slimtest5\" style={{position: 'relative', overflow: 'scroll', width: 'auto', height: '550px'}}>\n                                {sections.map((section, index) => (\n                                    <SubItems\n                                        questions = {this.props.questions}\n                                        headings = {this.props.headings}\n                                        key={index}\n                                        section={section}\n                                        index={index}\n                                        selected={selected}\n                                        childSelected={childSelected}\n                                        subSelected={subSelected}\n                                        selectedType={this.handleType}\n                                        selectedSubType={this.handleSubType}\n                                        getSectionQuestions = {loadQuestionsWithOptions}\n                                        setContent = {setContent}\n                                        content={content}\n                                        setHeadingWithContent = {setHeadingContent}\n                                        headingContent={headingContent}\n                                        noteType={noteType}\n                                        setHeadingIdsArr={this.props.setHeadingIdsArr}\n                                        setHeadingTextArr={this.props.setHeadingTextArr}\n                                        setHeadingContentArr={this.props.setHeadingContentArr}\n                                        quesWithMultiOption = {this.props.quesWithMultiOption}\n                                        handleQuesWithMultiOption= {this.props.handleQuesWithMultiOption}\n                                    />\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <NoteRightSide selected={selected}\n                                   questions={questions}\n                                   content={content}\n                                   noteType={noteType}\n                                   pname={pname}\n                                   pdate={pdate}\n                                   startTime={startTime}\n                                   endTime={endTime}\n                                   sessionFee={sessionFee}\n                                   introComment={introComment}\n                                   closingComment={closingComment}\n                                   headingIdsArr={headingIdsArr}\n                                   headingTextArr={headingTextArr}\n                                   headingContentArr={headingContentArr}\n                    />\n                </div>\n            </div>\n\n        </div>\n    );\n  }\n}\n\nexport default NoteSideNav;\n","import React, { Component } from \"react\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport CurrencyTextField from '@unicef/material-ui-currency-textfield'\nimport {IconButton, TextField} from \"@material-ui/core\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport {IsoTwoTone} from \"@material-ui/icons\";\n\nclass NoteContent extends Component {\n    state = {\n        iComment: '',\n        iFlag: true,\n        cFlag: true\n    }\n\n    handleMainComment = (comment, setIntroComment) => {\n        if (!this.state.iFlag) {\n            setIntroComment(comment)\n        }\n        this.setState({iComment: comment});\n    }\n\n    handleMainClosingComment = (comment, setClosingComment) => {\n        if (!this.state.cFlag) {\n            setClosingComment(comment)\n        }\n        this.setState({cComment: comment});\n    }\n\n    handleComment = (setIntroComment) => {\n        if (this.state.iFlag) {\n            this.setState({iFlag: false});\n            setIntroComment(this.state.iComment)\n        } else\n        {\n            this.setState({iFlag: true});\n            setIntroComment('')\n        }\n    }\n\n    handleClosingComment = (setClosingComment) => {\n        if (this.state.cFlag) {\n            this.setState({cFlag: false});\n            setClosingComment(this.state.cComment)\n        } else\n        {\n            this.setState({cFlag: true});\n            setClosingComment('')\n        }\n    }\n\n    render() {\n        const { pname, setName, pdate, setDate, startTime, setStartTime,\n            endTime, setEndTime, sessionFee, setSessionFee,\n            introComment, setIntroComment, closingComment, setClosingComment} = this.props;\n\n      return (\n        <div className=\"row bg-title\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-3 m-b-10\">\n                <div className=\"input-group\">\n                  <TextField\n                      variant=\"outlined\"\n                      className={\"form-control\"}\n                      id=\"exampleInputuname\"\n                      label=\"Name\"\n                      InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <AccountCircle />\n                            </InputAdornment>\n                        ),\n                      }}\n                      onChange={(e) => setName(e.target.value)}\n                      value={pname}\n                      size=\"small\"\n                      fullWidth\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-md-3 m-b-10\">\n                <div className=\"input-group\">\n                  <TextField\n                      className=\"form-control\"\n                      label=\"Date\"\n                      id=\"pdate\"\n                      value={pdate}\n                      type=\"date\"\n                      onChange={(e)=> setDate(e.target.value)}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      variant=\"outlined\"\n                      size=\"small\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-2 m-b-10\">\n                <div className=\"input-group\">\n                  <TextField\n                      className={\"form-control\"}\n                      id=\"start-time\"\n                      label=\"Start Time\"\n                      type=\"time\"\n                      size=\"small\"\n                      value={startTime}\n                      onChange={(e) => setStartTime(e.target.value)}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      inputProps={{\n                        step: 300, // 5 min\n                      }}\n                      fullWidth\n                      variant=\"outlined\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-2 m-b-10\">\n                <div className=\"input-group\">\n                    <TextField\n                      className={\"form-control\"}\n                      id=\"end-time\"\n                      label=\"End Time\"\n                      type=\"time\"\n                      size=\"small\"\n                      value={endTime}\n                      onChange={(e) => setEndTime(e.target.value)}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      inputProps={{\n                        step: 300, // 5 min\n                      }}\n                      variant=\"outlined\"\n                      fullWidth\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-2 m-b-10\">\n                  <div className=\"input-group\">\n                  <CurrencyTextField\n                      label=\"Fee\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      fullWidth\n                      value={sessionFee}\n                      onChange={(e) => setSessionFee(e.target.value)}\n                      currencySymbol=\"$\"\n                      minimumValue=\"0\"\n                      outputFormat=\"string\"\n                      decimalCharacter=\".\"\n                      digitGroupSeparator=\",\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 m-b-5\">\n                <div className=\"input-group bootstrap-touchspin\">\n                    <TextField\n                        variant=\"outlined\"\n                        className={\"form-control\"}\n                        id=\"introComments\"\n                        label=\"Introductory Comments\"\n                        fullWidth\n                        size=\"small\"\n                        onChange={(e) => this.handleMainComment(e.target.value, setIntroComment)}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                <IconButton\n                                onClick={() => this.handleComment(setIntroComment)}\n                                className={`${!this.state.iFlag ? 'introSelected' : ''}`}\n                                edge=\"end\"\n                                >\n                                    <IsoTwoTone />\n                                </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                </div>\n              </div>\n              <div className=\"col-md-6  m-b-5\">\n                <div className=\"input-group bootstrap-touchspin\">\n                    <TextField\n                        variant=\"outlined\"\n                        className={\"form-control\"}\n                        id=\"closingComments\"\n                        label=\"Closing Comments\"\n                        fullWidth\n                        size=\"small\"\n                        onChange={(e) => this.handleMainClosingComment(e.target.value, setClosingComment)}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        onClick={() => this.handleClosingComment(setClosingComment)}\n                                        edge=\"end\"\n                                        className={`${!this.state.cFlag ? 'introSelected' : ''}`}\n                                    >\n                                        <IsoTwoTone />\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default NoteContent;","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/questions\";\n\nexport function getQuestionsWithOptions(id) {\n  return http.get(apiEndpoint + \"/\" + id);\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Preference = ({ modalid, title, content }) => {\n  return (\n      <div className=\"modal fade\" id={modalid} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\" id=\"myLargeModalLabel\">Preferences and Advanced Options</h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n            </div>\n            <div className=\"modal-body\" id=\"slimtest1\">\n              {content}\n            </div>\n            <div className=\"modal-footer preference-footer\">\n              <button type=\"button\" className=\"btn btn-info waves-effect text-left\"><i\n    className=\"fa fa-save\"/>&nbsp;Save\n              </button>\n              <button type=\"button\" className=\"btn btn-danger waves-effect text-left\" data-dismiss=\"modal\"><i\n    className=\"fa fa-times\"/>&nbsp;Discard changes and Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default Preference;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport {confirmAlert} from \"react-confirm-alert\";\n\nconst FinalEdit = ({ modalid, title, fcontent }) => {\n    return (\n        <div className=\"modal fade\" id={modalid} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h4 className=\"modal-title\" id=\"myLargeModalLabel\">{title}</h4>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                    </div>\n                    <div className=\"modal-body\" id=\"slimtest1\">\n                        {fcontent}\n                    </div>\n                    <div className=\"modal-footer preference-footer\">\n                        <button type=\"button\" className=\"btn btn-danger waves-effect text-left\" data-dismiss=\"modal\"><i\n                            className=\"fa fa-times\"/>&nbsp;Close\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FinalEdit;\n","import React from \"react\";\n\nconst HelpContent = () => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">\n          To get started you need to do two things: (1) Assign your subscription\n          to yourself and then (2) set up your signature line. Both of these can\n          be done on the main DASHBOARD page, and should not take more than a\n          minute.\n        </p>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <b>Assigning subscription(s):</b> Sometimes people purchase\n            subscriptions for others, so first we ask you to confirm who the\n            user will be, for each subscription you purchase. Scroll down to the\n            bottom of your DASHBOARD, and click the button to assign the\n            subscription to yourself. (Or, if you want to assign the\n            subscription to someone else, just enter their email address.) If\n            you are managing a group subscription you can eventually assign all\n            the slots to others, or assign one to yourself and the rest to other\n            members of your group.\n          </li>\n          <li className=\"list-group-item\">\n            <b>Signature line:</b> Then once you have assigned a subscription to\n            yourself you can set up your signature line. This should include\n            your name, plus if you wish you can add your degree(s),\n            certifications, and/or the name of your clinic. It’s up to you. Once\n            you have entered it, if you later want to change it you just need to\n            send us a change-request message (from the main DASHBOARD page) and\n            we’ll do it for you.\n          </li>\n        </ul>\n        <p className=\"my-2\">\n          <b>Once you are set up</b> you can click the green button on the\n          DASHBOARD main page to start your first note! There is a help menu if\n          you need it, but you should be able to just click buttons and type\n          things in – and watch your note appear at the right of your screen.\n        </p>\n        <p className=\"my-3\">\n          <b>Eventually</b> you may want to explore the other tabs on the\n          dashboard menu:\n        </p>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <b>My Profile:</b> lists the basic information associated with your\n            account. This is where you can change your password if you would\n            like. Also you can subscribe to receive (infrequent) email relating\n            to Note Designer upgrades or related product information.\n          </li>\n          <li className=\"list-group-item\">\n            <b>My Request:</b> shows any requests you’ve sent to us, such as a\n            request to change your signature line or for a refund (note that\n            refunds are available only during the first 30 days after purchasing\n            your subscription).\n          </li>\n          <li className=\"list-group-item\">\n            <b>My Request:</b> shows any requests you’ve sent to us, such as a\n            request to change your signature line or for a refund (note that\n            refunds are available only during the first 30 days after purchasing\n            your subscription).\n          </li>\n          <li className=\"list-group-item\">\n            <b>My Orders:</b> shows you information about your subscriptions,\n            including a link to the relevant invoice. If you wish more detailed\n            information you can use the button near the top of the main\n            DASHBOARD page to get a link to your account with Fastspring, our\n            online retail partner. Fastspring is a popular international\n            platform for managing subscriptions for digital products such as\n            Note Designer. They handle all the billing-related issues for your\n            account (including securely managing your credit card information).\n          </li>\n          <li className=\"list-group-item\">\n            <b>My Subscriptions:</b> is where you can see detailed information\n            about your subscription(s). This will be particularly useful to you\n            if you manage multiple subscriptions for a clinic.\n          </li>\n          <li className=\"list-group-item\">\n            <b>My Notifications:</b> lists any notifications we have sent to\n            you, for example when you set up your account or assign\n            subscriptions to yourself or others.\n          </li>\n        </ul>\n        <p className=\"my-2\">\n          Cancellation: We are confident that you will find Note Designer\n          useful. That said, you may decide at some point that it is not what\n          you need and you would like to cancel your subscription. If you\n          started your subscription less than 30 days ago you can use the Refund\n          button on your Dashboard. If it has been 30 days or more, go here:\n          Cancel Subscription page\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default HelpContent;\n","import React from \"react\";\n\nconst PreferenceContent = () => {\n  return (\n      <div>\n          <div className=\"b-b p-b-10\">\n            <h4>Terminology</h4>\n            <p>Which terms do you prefer (current selections are highlighted)?</p>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"client\" autoComplete=\"off\"/>\n                    Client </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"patient\" autoComplete=\"off\"/>\n                    Patient </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"person\" autoComplete=\"off\"/>\n                    Person </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"student\" autoComplete=\"off\"/>\n                    Student </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"youth\" autoComplete=\"off\"/>\n                    Youth </label>\n              </div>\n            </div>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"psychodynamic\" autoComplete=\"off\"/>\n                    psychodynamic </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"psychoanalytic\" autoComplete=\"off\"/>\n                    psychoanalytic </label>\n              </div>\n            </div>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"behavior\" autoComplete=\"off\"/>\n                    behavior </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"behavior\" autoComplete=\"off\"/>\n                    behavior </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"b-b p-b-10\">\n            <h4>Opening heading</h4>\n            <p>Do you wish to include a heading \"Session Note\" or \"Progress Note\"?</p>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"session\" autoComplete=\"off\"/>\n                    Session Note </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"progress\" autoComplete=\"off\"/>\n                    Progress Note </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"noheading\" autoComplete=\"off\"/>\n                    No heading </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"b-b p-b-10\">\n            <h4>Section Breaks</h4>\n            <p>Do you wish to have paragraph breaks and/or headings between sections of your progress note?</p>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"break\" autoComplete=\"off\"/>\n                    no paragraph breaks </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"pragraph\" autoComplete=\"off\"/>\n                    paragraph breaks </label>\n              </div>\n            </div>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"noheading\" autoComplete=\"off\"/>\n                    no section heading </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"noheading\" autoComplete=\"off\"/>\n                    section heading </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"b-b p-b-10\">\n            <h4>Spacing Between Options</h4>\n            <p>Set your spacing between Options:</p>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"1\" autoComplete=\"off\"/>\n                    1 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"2\" autoComplete=\"off\"/>\n                    2 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"3\" autoComplete=\"off\"/>\n                    3 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"4\" autoComplete=\"off\"/>\n                    4 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"5\" autoComplete=\"off\"/>\n                    5 </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"b-b p-b-10\">\n            <h4>Printed-Note Font Style</h4>\n            <p>Set your Printed-Note Font Style: </p>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"Arial\" autoComplete=\"off\"/>\n                    Arial </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"Times\" autoComplete=\"off\"/>\n                    Times </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"Courier\" autoComplete=\"off\"/>\n                    Courier </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"b-b p-b-10\">\n            <h4>Printed-Note Font Size</h4>\n            <p>Set your Printed-Note Font Size:</p>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"12\" autoComplete=\"off\"/>\n                    12 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"14\" autoComplete=\"off\"/>\n                    14 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"16\" autoComplete=\"off\"/>\n                    16 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"18\" autoComplete=\"off\"/>\n                    18 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"20\" autoComplete=\"off\"/>\n                    20 </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"b-b p-b-10\">\n            <h4>Date Format</h4>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"23\" autoComplete=\"off\"/>\n                    September 23, 1939 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"09\" autoComplete=\"off\"/>\n                    09/23/1939 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"009\" autoComplete=\"off\"/>\n                    23/09/1939 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"009\" autoComplete=\"off\"/>\n                    1939-09-13 </label>\n              </div>\n            </div>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"sat\" autoComplete=\"off\"/>\n                    Saturday, 23 September, 1939 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"sata\" autoComplete=\"off\"/>\n                    Saturday, September 23, 1939 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"00223\" autoComplete=\"off\"/>\n                    23 September, 1939 </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"p-b-10\">\n            <h4>Color Opacity of Selected Statements</h4>\n            <p>Set color opacity of selected statements:</p>\n            <div className=\"row text-center preference-row m-b-5\">\n              <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n                <label className=\"btn btn-default\">\n                  <input type=\"radio\" value=\"0.1\" autoComplete=\"off\"/>\n                    0.1 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"0.3\" autoComplete=\"off\"/>\n                    0.3 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"0.5\" autoComplete=\"off\"/>\n                    0.5 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"0.7\" autoComplete=\"off\"/>\n                    0.7 </label>\n                <label className=\"btn btn-info\">\n                  <input type=\"radio\" value=\"0.9\" autoComplete=\"off\"/> 0.9 </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PreferenceContent;\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport {confirmAlert} from \"react-confirm-alert\";\n\nconst FinalEditContent = (props) => {\n    const handlePdf = () => {\n        const input = document.getElementById(\"finalContent\");\n        html2canvas(input).then((canvas) => {\n            const imgData = canvas.toDataURL(\"image/png\");\n            const pdf = new jsPDF({\n                orientation: \"A4\",\n            });\n            const imgProps = pdf.getImageProperties(imgData);\n            const pdfWidth = pdf.internal.pageSize.getWidth();\n            const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n            pdf.addImage(imgData, \"PNG\", 10, 20, pdfWidth - 20, pdfHeight);\n            pdf.save(\"download.pdf\");\n        });\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"pnl-preview section-group\">\n                <div className=\"card-header\">\n                    <button id=\"btn-print\" className=\"btn btn-info btn-sm m-r-5\" onClick={handlePdf}>\n                        <i className=\"fa fa-print\"/>\n                        Export\n                    </button>\n                </div>\n                <div className=\"card-body container-fluid\">\n                    <div id=\"finalContent\">\n                        <div id=\"generatedNoteContent\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <p className=\"mb-2\"><b>Name:</b> <span className=\"lblDisplay\"\n                                                                           id=\"lblDisplayName\"/>\n                                        {\n                                            props.pname\n                                        }\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <p className=\"mb-2\"><b>Date:</b> <span className=\"lblDisplay\"\n                                                                           id=\"lblDisplayDate\"/>\n                                        {\n                                            props.pdate\n                                        }\n                                    </p>\n                                </div>\n                            </div>\n\n                            { props.startTime && <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <p className=\"mb-2\"><b>Start at:</b> <span className=\"lblDisplay\"\n                                                                               id=\"lblDisplayDate\"/>\n                                        {\n                                            props.startTime\n                                        }\n                                    </p>\n                                </div>\n                            </div>}\n\n                            {props.endTime && <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <p className=\"mb-2\"><b>End at:</b> <span className=\"lblDisplay\"\n                                                                             id=\"lblDisplayDate\"/>\n                                        {\n                                            props.endTime\n                                        }\n                                    </p>\n                                </div>\n                            </div>\n                            }\n                            { props.headingIdsArr.map((element, index) => {\n                                return <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <p className=\"mb-2\"><b>{props.headingTextArr[element]}</b> <span className=\"lblDisplay\"\n                                                                                                   id=\"lblDisplayDate\"/>\n                                            {\n                                                props.headingContentArr[element]\n                                            }\n                                        </p>\n                                    </div>\n                                </div>\n                            })}\n\n                            {props.sessionFee && <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <p className=\"mb-2\"><b>Session fee:</b> <span className=\"lblDisplay\"\n                                                                                  id=\"lblDisplayDate\"/>\n                                        {\n                                            props.sessionFee\n                                        }\n                                    </p>\n                                </div>\n                            </div>}\n                            <div className=\"row\"/>\n                            <div className=\"row\" id=\"divOpeningHeading\">\n                                <div className=\"col-12\">\n                                    <p contentEditable={\"true\"}><b id=\"lblOpeningHeading\">Session Note:</b>\n                                        <br/><br/>\n                                        { props.introComment && props.introComment + '. ' }\n                                        { props.content }\n                                        { props.closingComment && ' ' + props.closingComment + '.' }\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"fixedSampleSignature\">\n                            <br/>\n                            <br/>\n                            <br/>\n                            <br/>\n                            ________________________\n                            <div>Sara Chaudhri LCSW</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FinalEditContent;\n","import React, {Component, useState} from \"react\";\n\nimport NoteSideNav from \"./common/NoteSidenav\";\nimport NoteContent from \"./notes/NoteContent\";\nimport NoteRightSide from \"./common/NoteRightSide\";\nimport { getSectionsByType, getNotes } from \"../services/noteService\";\nimport { getHeadingsByType } from \"../services/headingService\";\nimport { getQuestionsWithOptions } from \"../services/questionService\";\nimport Modal from \"./common/modal\";\nimport Preference from \"./common/preferenceModal\";\nimport FinalEdit from \"./common/FinalEditModal\";\nimport HelpContent from \"./helpContent\";\nimport PreferenceContent from \"./preferenceContent\";\nimport FinalEditContent from \"./finalEditContent\";\nimport { Link } from \"react-router-dom\";\nimport Type from \"./type\";\nimport {saveOptionWithId} from \"../services/optionService\";\nimport SubItems from \"./common/SubItem\";\nimport QuestionWithMultiOptions from \"./notes/QuestionWithMultiOptions\";\n\nclass Note extends Component {\n  state = {\n    notes: [],\n    noteType: {},\n    sections: [],\n    questions: {},\n    headings: [],\n    selected: { id: 1 },\n    childSelected: 1,\n    subSelected: 6,\n    qiestionWithOptions:[{_id:\"\",question:\"\",options:\"\"}],\n    pname: null,\n    pdate: null,\n    sessionFee: null,\n    startTime: null,\n    endTime: null,\n    introComment: '',\n    closingComment: '',\n    headingContent: [],\n    content: [],\n    quesWithMultiOption : [],\n    headingsIdArr: [],\n    headingsTextArr: [],\n    headingsContentArr: []\n  };\n\n  async componentDidMount() {\n    const id = this.props.match.params.type;\n    const { data: notes } = await getNotes();\n    const { data: sections } = await getSectionsByType(id);\n    const { data: questions } = await getQuestionsWithOptions(\n      this.state.subSelected\n    );\n    const { data: headings } = await getHeadingsByType(id);\n\n    this.setState({ notes: notes[\"success\"] });\n    await this.setState({ ...this.state, noteType: id });\n    this.setState({ sections: sections[\"success\"] });\n    this.setState({ headings: headings[\"success\"] });\n    this.setState({ ...this.state, questions: questions[\"success\"] });\n  }\n\n  handleContent = async (content) => {\n    await this.setState({...this.state, content: [...content]})\n  }\n\n  handleSectionQuestions= async (id) =>{\n    const {questions} = this.state;\n    const { data: qts } = await getQuestionsWithOptions(\n      id\n    );\n    this.setState({ ...this.state, questions: qts[\"success\"] });\n    await this.setState({...this.state, subSelected: id});\n    }\n\n  handleType = async (type) => {\n    await this.setState({ ...this.state, noteType: type });\n  };\n\n  handleHeadingIds = async (headingsIdArr) => {\n    await this.setState({...this.state, headingsIdArr: headingsIdArr})\n  }\n  handleHeadingText = async (headingsTextArr) => {\n    await this.setState({...this.state, headingsTextArr: headingsTextArr})\n  }\n  handleHeadingContent = async (headingsContentArr) => {\n    await this.setState({...this.state, headingsContentArr: headingsContentArr})\n  }\n\n  handleName = (name) => {\n    this.setState({...this.state, pname: name})\n  }\n  handleDate = (date) => {\n    this.setState({...this.state, pdate: date})\n  }\n  handleStartTime = (startTime) => {\n    this.setState({...this.state, startTime: startTime})\n  }\n  handleEndTime = (endTime) => {\n    this.setState({...this.state, endTime: endTime})\n  }\n  handleSessionFee = (sessionFee) => {\n    this.setState({...this.state, sessionFee: sessionFee})\n  }\n  handleIntroComment = (introComment) => {\n    this.setState({...this.state, introComment: introComment})\n  }\n  handleClosingComment = (closingComment) => {\n    this.setState({...this.state, closingComment: closingComment})\n  }\n\n  handleHeadingWithContent = async (headingContent) => {\n    await this.setState({...this.state, headings: headingContent})\n  }\n\n  handleSelected = async (section) => {\n    await this.setState({...this.state, selected: section});\n    await this.setState({...this.state, subSelected: (section.children && section.children[0] ?\n    section.children[0].id : 6)});\n    const { data: questions } = await getQuestionsWithOptions(\n        this.state.subSelected\n    );\n    await this.setState({...this.state, questions: questions[\"success\"]});\n  }\n\n  handleQuesWithMultiOption = async (quesWithMultiOption) => {\n    await this.setState({...this.state, quesWithMultiOption: [...quesWithMultiOption]});\n  }\n\n  handleSelection = () => {\n    let { noteType } = this.state;\n    noteType = {};\n    this.setState({ noteType });\n  };\n\n  handleSubSelection = (childSelection) => {\n    this.setState({...this.state, childSelected: childSelection})\n  };\n\n  goNote = () => {\n    const { noteType } = this.state;\n    const url = noteType ? \"/\" + noteType : \"\";\n    window.location = \"/note\" + url;\n  };\n  render() {\n    const {questions, childSelected, subSelected, selected, sections, notes, noteType} = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"page-wrapper\">\n          <div className=\"container-fluid\">\n            <NoteContent\n                pname={this.state.pname} setName={this.handleName}\n                pdate={this.state.pdate} setDate={this.handleDate}\n                startTime={this.state.startTime} setStartTime={this.handleStartTime}\n                endTime={this.state.endTime} setEndTime={this.handleEndTime}\n                sessionFee={this.state.sessionFee} setSessionFee={this.handleSessionFee}\n                introComment={this.state.introComment} setIntroComment={this.handleIntroComment}\n                closingComment={this.state.closingComment} setClosingComment={this.handleClosingComment}\n            />\n          </div>\n          <div className=\"row\" id=\"tab\">\n            <NoteSideNav\n              questions={this.state.questions}\n              headings={this.state.headings}\n              sections={sections}\n              selected={selected}\n              childSelected={childSelected}\n              subSelected={subSelected}\n              loadQuestionsWithOptions={this.handleSectionQuestions}\n              setSeleted = {this.handleSelected}\n              setSubSeleted = {this.handleSubSelection}\n              pname={this.state.pname}\n              pdate={this.state.pdate}\n              startTime={this.state.startTime}\n              endTime={this.state.endTime}\n              sessionFee={this.state.sessionFee}\n              introComment={this.state.introComment}\n              closingComment={this.state.closingComment}\n              setHeadingContent={this.handleHeadingWithContent}\n              headingContent={this.state.headingContent}\n              noteType={noteType}\n              content={this.state.content}\n              setContent = {this.handleContent}\n              quesWithMultiOption = {this.state.quesWithMultiOption}\n              handleQuesWithMultiOption= {this.handleQuesWithMultiOption}\n              headingIdsArr={this.state.headingsIdArr}\n              headingTextArr={this.state.headingsTextArr}\n              headingContentArr={this.state.headingsContentArr}\n              setHeadingIdsArr={this.handleHeadingIds}\n              setHeadingTextArr={this.handleHeadingText}\n              setHeadingContentArr={this.handleHeadingContent}\n            />\n          </div>\n          <Modal\n              modalid=\"help\"\n              title=\"Help with Note Designer\n              Get Started\"\n              content=<HelpContent />\n          />\n          <Preference\n              modalid=\"preference\"\n              title=\"Preferences and Advanced Options\"\n              content=<PreferenceContent />\n          />\n          <FinalEdit\n              modalid=\"finalEdit\"\n              title=\"Final Content\"\n              fcontent=<FinalEditContent\n                selected={this.state.selected}\n                questions={this.state.questions}\n                content={this.state.content}\n                noteType={this.state.noteType}\n                pname={this.state.pname}\n                pdate={this.state.pdate}\n                startTime={this.state.startTime}\n                endTime={this.state.endTime}\n                sessionFee={this.state.sessionFee}\n                introComment={this.state.introComment}\n                closingComment={this.state.closingComment}\n                headingIdsArr={this.state.headingsIdArr}\n                headingTextArr={this.state.headingsTextArr}\n                headingContentArr={this.state.headingsContentArr}\n                />\n                />\n        <div\n              className=\"modal fade\"\n              id=\"responsive-modal\"\n              tabIndex=\"-1\"\n              aria-labelledby=\"myModalLabel\"\n              aria-hidden=\"true\"\n          >\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h4 className=\"modal-title\">Start a new note</h4>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                </div>\n                <div className=\"modal-body\">\n                  <p>Choose Note Type:</p>\n                  <form>\n                    {notes.map((note) => (\n                        <div className=\"checkbox checkbox-info checkbox-circle\" key={note.id}>\n                          <input id={note.id} type=\"checkbox\" name=\"notes\"\n                                 onClick={() => this.handleType(note.id)}/>\n                          <label htmlFor={note.id}>{note.name}</label>\n                        </div>\n                    ))}\n                  </form>\n                  <p> Notice: the content of the current note will be discarded if you choose to open a new note on the current tab.</p>\n                </div>\n                <div className=\"modal-footer note-modal\">\n                  <button type=\"button\"\n                          className=\"btn btn-warning waves-effect waves-light\"\n                          onClick={this.goNote}>\n                    Discard current note and start a new note\n                  </button>\n                  <button type=\"button\"\n                          className=\"btn btn-info waves-effect waves-light\">\n                    Keep current note active and start a new note in a new browser tab\n                  </button>\n                  <button type=\"button\" className=\"btn btn-default waves-effect\"\n                          data-dismiss=\"modal\"\n                          onClick={this.handleSelection}\n                  >Close</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport NoteTopNav from \"../common/NoteTopnav\";\nimport ProtectedRoute from \"../common/ProtectedRoute\";\nimport { getUser } from \"../../services/authService\";\nimport Note from \"../Note\";\n\nclass NoteLayout extends Component {\n  state = {\n    user: [],\n  };\n  async componentDidMount() {\n    const { data: user } = await getUser();\n    await this.setState({...this.state, user: user} );\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <NoteTopNav user = { this.state.user } />\n        <Switch>\n          <ProtectedRoute exact path=\"/note/:type?/:child?\" component={Note} />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NoteLayout;\n","import React, { useEffect } from \"react\";\nimport auth from \"../../services/authService\";\n\nconst Logout = () => {\n  useEffect(() => {\n    auth.logout();\n    window.location = \"/login\";\n  });\n\n  return null;\n};\n\nexport default Logout;\n","import React, { Component } from \"react\";\nimport { Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"./components/notFound\";\nimport LoginForm from \"./components/users/loginForm\";\nimport Home from \"./components/home\";\nimport AppRoute from \"./Routes\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport MainLayout from \"./MainLayout\";\nimport DashboardLayout from \"./components/layouts/DashboardLayout\";\nimport NoteLayout from \"./components/layouts/NoteLayout\";\nimport ProtectedRoute from \"./components/common/ProtectedRoute\";\nimport Logout from \"./components/common/logout\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Switch>\n          <AppRoute\n            path=\"/register\"\n            component={LoginForm}\n            layout={MainLayout}\n          />\n          <AppRoute path=\"/login\" component={LoginForm} layout={MainLayout} />\n          <ProtectedRoute path=\"/logout\" component={Logout} />\n          <AppRoute path=\"/home\" component={Home} layout={MainLayout} />\n          <ProtectedRoute exact path=\"/dashboard\" component={DashboardLayout} />\n          <ProtectedRoute\n            exact\n            path=\"/getting-start\"\n            component={DashboardLayout}\n          />\n          <ProtectedRoute exact path=\"/profile\" component={DashboardLayout} />\n          <ProtectedRoute exact path=\"/myprofile\" component={DashboardLayout} />\n          <ProtectedRoute exact path=\"/orders\" component={DashboardLayout} />\n          <ProtectedRoute exact path=\"/myRequests\" component={DashboardLayout} />\n          <ProtectedRoute\n            exact\n            path=\"/subscriptions\"\n            component={DashboardLayout}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/notifications\"\n            component={DashboardLayout}\n          />\n          <ProtectedRoute path=\"/note/:type?\" component={NoteLayout} />\n          <AppRoute\n            path=\"/not-found\"\n            component={NotFound}\n            layout={MainLayout}\n          />\n          <Redirect from=\"/\" exact to=\"/login\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n        <ToastContainer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}